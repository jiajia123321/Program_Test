/****************************************************************************
**
** Namespace ActProgTypeLib generated by dumpcpp v5.13.0 using
** dumpcpp {78703D55-4042-4046-845D-7BBE83FB2F44}
** from the type library C:\MELSEC\Act\Control\ActProgType.dll
**
****************************************************************************/

#ifndef QAX_DUMPCPP_ACTPROGTYPELIB_H
#define QAX_DUMPCPP_ACTPROGTYPELIB_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef ACTPROGTYPELIB_EXPORT
#define ACTPROGTYPELIB_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace ActProgTypeLib {


// skipping event interface _IActProgTypeEvents

class ACTPROGTYPELIB_EXPORT IActProgType : public QAxObject
{
public:
    IActProgType(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property ActATCommand

    Property ActATCommand

    */
    inline QString ActATCommand() const; //Returns the value of ActATCommand
    inline void SetActATCommand(const QString& value); //Sets the value of the ActATCommand property

    /*
    Property ActATCommandPasswordCancelRetryTimes

    Property ActATCommandPasswordCancelRetryTimes

    */
    inline int ActATCommandPasswordCancelRetryTimes() const; //Returns the value of ActATCommandPasswordCancelRetryTimes
    inline void SetActATCommandPasswordCancelRetryTimes(int value); //Sets the value of the ActATCommandPasswordCancelRetryTimes property

    /*
    Property ActATCommandResponseWaitTime

    Property ActATCommandResponseWaitTime

    */
    inline int ActATCommandResponseWaitTime() const; //Returns the value of ActATCommandResponseWaitTime
    inline void SetActATCommandResponseWaitTime(int value); //Sets the value of the ActATCommandResponseWaitTime property

    /*
    Property ActBaudRate

    Property ActBaudRate

    */
    inline int ActBaudRate() const; //Returns the value of ActBaudRate
    inline void SetActBaudRate(int value); //Sets the value of the ActBaudRate property

    /*
    Property ActCallbackCancelWaitTime

    Property ActCallbackCancelWaitTime

    */
    inline int ActCallbackCancelWaitTime() const; //Returns the value of ActCallbackCancelWaitTime
    inline void SetActCallbackCancelWaitTime(int value); //Sets the value of the ActCallbackCancelWaitTime property

    /*
    Property ActCallbackDelayTime

    Property ActCallbackDelayTime

    */
    inline int ActCallbackDelayTime() const; //Returns the value of ActCallbackDelayTime
    inline void SetActCallbackDelayTime(int value); //Sets the value of the ActCallbackDelayTime property

    /*
    Property ActCallbackNumber

    Property ActCallbackNumber

    */
    inline QString ActCallbackNumber() const; //Returns the value of ActCallbackNumber
    inline void SetActCallbackNumber(const QString& value); //Sets the value of the ActCallbackNumber property

    /*
    Property ActCallbackReceptionWaitingTimeOut

    Property ActCallbackReceptionWaitingTimeOut

    */
    inline int ActCallbackReceptionWaitingTimeOut() const; //Returns the value of ActCallbackReceptionWaitingTimeOut
    inline void SetActCallbackReceptionWaitingTimeOut(int value); //Sets the value of the ActCallbackReceptionWaitingTimeOut property

    /*
    Property ActConnectUnitNumber

    Property ActConnectUnitNumber

    */
    inline int ActConnectUnitNumber() const; //Returns the value of ActConnectUnitNumber
    inline void SetActConnectUnitNumber(int value); //Sets the value of the ActConnectUnitNumber property

    /*
    Property ActConnectWay

    Property ActConnectWay

    */
    inline int ActConnectWay() const; //Returns the value of ActConnectWay
    inline void SetActConnectWay(int value); //Sets the value of the ActConnectWay property

    /*
    Property ActConnectionCDWaitTime

    Property ActConnectionCDWaitTime

    */
    inline int ActConnectionCDWaitTime() const; //Returns the value of ActConnectionCDWaitTime
    inline void SetActConnectionCDWaitTime(int value); //Sets the value of the ActConnectionCDWaitTime property

    /*
    Property ActConnectionModemReportWaitTime

    Property ActConnectionModemReportWaitTime

    */
    inline int ActConnectionModemReportWaitTime() const; //Returns the value of ActConnectionModemReportWaitTime
    inline void SetActConnectionModemReportWaitTime(int value); //Sets the value of the ActConnectionModemReportWaitTime property

    /*
    Property ActControl

    Property ActControl

    */
    inline int ActControl() const; //Returns the value of ActControl
    inline void SetActControl(int value); //Sets the value of the ActControl property

    /*
    Property ActCpuTimeOut

    Property ActCpuTimeOut

    */
    inline int ActCpuTimeOut() const; //Returns the value of ActCpuTimeOut
    inline void SetActCpuTimeOut(int value); //Sets the value of the ActCpuTimeOut property

    /*
    Property ActCpuType

    Property ActCpuType

    */
    inline int ActCpuType() const; //Returns the value of ActCpuType
    inline void SetActCpuType(int value); //Sets the value of the ActCpuType property

    /*
    Property ActDataBits

    Property ActDataBits

    */
    inline int ActDataBits() const; //Returns the value of ActDataBits
    inline void SetActDataBits(int value); //Sets the value of the ActDataBits property

    /*
    Property ActDestinationIONumber

    Property ActDestinationIONumber

    */
    inline int ActDestinationIONumber() const; //Returns the value of ActDestinationIONumber
    inline void SetActDestinationIONumber(int value); //Sets the value of the ActDestinationIONumber property

    /*
    Property ActDestinationPortNumber

    Property ActDestinationPortNumber

    */
    inline int ActDestinationPortNumber() const; //Returns the value of ActDestinationPortNumber
    inline void SetActDestinationPortNumber(int value); //Sets the value of the ActDestinationPortNumber property

    /*
    Property ActDialNumber

    Property ActDialNumber

    */
    inline QString ActDialNumber() const; //Returns the value of ActDialNumber
    inline void SetActDialNumber(const QString& value); //Sets the value of the ActDialNumber property

    /*
    Property ActDidPropertyBit

    Property ActDidPropertyBit

    */
    inline int ActDidPropertyBit() const; //Returns the value of ActDidPropertyBit
    inline void SetActDidPropertyBit(int value); //Sets the value of the ActDidPropertyBit property

    /*
    Property ActDisconnectionCDWaitTime

    Property ActDisconnectionCDWaitTime

    */
    inline int ActDisconnectionCDWaitTime() const; //Returns the value of ActDisconnectionCDWaitTime
    inline void SetActDisconnectionCDWaitTime(int value); //Sets the value of the ActDisconnectionCDWaitTime property

    /*
    Property ActDisconnectionDelayTime

    Property ActDisconnectionDelayTime

    */
    inline int ActDisconnectionDelayTime() const; //Returns the value of ActDisconnectionDelayTime
    inline void SetActDisconnectionDelayTime(int value); //Sets the value of the ActDisconnectionDelayTime property

    /*
    Property ActDsidPropertyBit

    Property ActDsidPropertyBit

    */
    inline int ActDsidPropertyBit() const; //Returns the value of ActDsidPropertyBit
    inline void SetActDsidPropertyBit(int value); //Sets the value of the ActDsidPropertyBit property

    /*
    Property ActHostAddress

    Property ActHostAddress

    */
    inline QString ActHostAddress() const; //Returns the value of ActHostAddress
    inline void SetActHostAddress(const QString& value); //Sets the value of the ActHostAddress property

    /*
    Property ActIONumber

    Property ActIONumber

    */
    inline int ActIONumber() const; //Returns the value of ActIONumber
    inline void SetActIONumber(int value); //Sets the value of the ActIONumber property

    /*
    Property ActIntelligentPreferenceBit

    Property ActIntelligentPreferenceBit

    */
    inline int ActIntelligentPreferenceBit() const; //Returns the value of ActIntelligentPreferenceBit
    inline void SetActIntelligentPreferenceBit(int value); //Sets the value of the ActIntelligentPreferenceBit property

    /*
    Property ActLineType

    Property ActLineType

    */
    inline int ActLineType() const; //Returns the value of ActLineType
    inline void SetActLineType(int value); //Sets the value of the ActLineType property

    /*
    Property ActMultiDropChannelNumber

    Property ActMultiDropChannelNumber

    */
    inline int ActMultiDropChannelNumber() const; //Returns the value of ActMultiDropChannelNumber
    inline void SetActMultiDropChannelNumber(int value); //Sets the value of the ActMultiDropChannelNumber property

    /*
    Property ActNetworkNumber

    Property ActNetworkNumber

    */
    inline int ActNetworkNumber() const; //Returns the value of ActNetworkNumber
    inline void SetActNetworkNumber(int value); //Sets the value of the ActNetworkNumber property

    /*
    Property ActOutsideLineNumber

    Property ActOutsideLineNumber

    */
    inline QString ActOutsideLineNumber() const; //Returns the value of ActOutsideLineNumber
    inline void SetActOutsideLineNumber(const QString& value); //Sets the value of the ActOutsideLineNumber property

    /*
    Property ActPacketType

    Property ActPacketType

    */
    inline int ActPacketType() const; //Returns the value of ActPacketType
    inline void SetActPacketType(int value); //Sets the value of the ActPacketType property

    /*
    Property ActParity

    Property ActParity

    */
    inline int ActParity() const; //Returns the value of ActParity
    inline void SetActParity(int value); //Sets the value of the ActParity property

    /*
    Property ActPassword

    Property ActPassword

    */
    inline QString ActPassword() const; //Returns the value of ActPassword
    inline void SetActPassword(const QString& value); //Sets the value of the ActPassword property

    /*
    Property ActPasswordCancelResponseWaitTime

    Property ActPasswordCancelResponseWaitTime

    */
    inline int ActPasswordCancelResponseWaitTime() const; //Returns the value of ActPasswordCancelResponseWaitTime
    inline void SetActPasswordCancelResponseWaitTime(int value); //Sets the value of the ActPasswordCancelResponseWaitTime property

    /*
    Property ActPortNumber

    Property ActPortNumber

    */
    inline int ActPortNumber() const; //Returns the value of ActPortNumber
    inline void SetActPortNumber(int value); //Sets the value of the ActPortNumber property

    /*
    Property ActProtocolType

    Property ActProtocolType

    */
    inline int ActProtocolType() const; //Returns the value of ActProtocolType
    inline void SetActProtocolType(int value); //Sets the value of the ActProtocolType property

    /*
    Property ActSourceNetworkNumber

    Property ActSourceNetworkNumber

    */
    inline int ActSourceNetworkNumber() const; //Returns the value of ActSourceNetworkNumber
    inline void SetActSourceNetworkNumber(int value); //Sets the value of the ActSourceNetworkNumber property

    /*
    Property ActSourceStationNumber

    Property ActSourceStationNumber

    */
    inline int ActSourceStationNumber() const; //Returns the value of ActSourceStationNumber
    inline void SetActSourceStationNumber(int value); //Sets the value of the ActSourceStationNumber property

    /*
    Property ActStationNumber

    Property ActStationNumber

    */
    inline int ActStationNumber() const; //Returns the value of ActStationNumber
    inline void SetActStationNumber(int value); //Sets the value of the ActStationNumber property

    /*
    Property ActStopBits

    Property ActStopBits

    */
    inline int ActStopBits() const; //Returns the value of ActStopBits
    inline void SetActStopBits(int value); //Sets the value of the ActStopBits property

    /*
    Property ActSumCheck

    Property ActSumCheck

    */
    inline int ActSumCheck() const; //Returns the value of ActSumCheck
    inline void SetActSumCheck(int value); //Sets the value of the ActSumCheck property

    /*
    Property ActTargetSimulator

    Property ActTargetSimulator

    */
    inline int ActTargetSimulator() const; //Returns the value of ActTargetSimulator
    inline void SetActTargetSimulator(int value); //Sets the value of the ActTargetSimulator property

    /*
    Property ActThroughNetworkType

    Property ActThroughNetworkType

    */
    inline int ActThroughNetworkType() const; //Returns the value of ActThroughNetworkType
    inline void SetActThroughNetworkType(int value); //Sets the value of the ActThroughNetworkType property

    /*
    Property ActTimeOut

    Property ActTimeOut

    */
    inline int ActTimeOut() const; //Returns the value of ActTimeOut
    inline void SetActTimeOut(int value); //Sets the value of the ActTimeOut property

    /*
    Property ActTransmissionDelayTime

    Property ActTransmissionDelayTime

    */
    inline int ActTransmissionDelayTime() const; //Returns the value of ActTransmissionDelayTime
    inline void SetActTransmissionDelayTime(int value); //Sets the value of the ActTransmissionDelayTime property

    /*
    Property ActUnitNumber

    Property ActUnitNumber

    */
    inline int ActUnitNumber() const; //Returns the value of ActUnitNumber
    inline void SetActUnitNumber(int value); //Sets the value of the ActUnitNumber property

    /*
    Property ActUnitType

    Property ActUnitType

    */
    inline int ActUnitType() const; //Returns the value of ActUnitType
    inline void SetActUnitType(int value); //Sets the value of the ActUnitType property

    /*
    Method CheckDeviceString

    Method CheckDeviceString

    */
    inline int CheckDeviceString(const QString& szDevice, int lCheckType, int lSize, int& lplDeviceType, QString& lpszDeviceName, int& lplDeviceNumber, int& lplDeviceRadix);

    /*
    Method Close

    Method Close

    */
    inline int Close();

    /*
    Method Connect

    Method Connect

    */
    inline int Connect();

    /*
    Method Disconnect

    Method Disconnect

    */
    inline int Disconnect();

    /*
    Method EntryDeviceStatus

    Method EntryDeviceStatus

    */
    inline int EntryDeviceStatus(const QString& szDeviceList, int lSize, int lMonitorCycle, int& lplData);

    /*
    Method FreeDeviceStatus

    Method FreeDeviceStatus

    */
    inline int FreeDeviceStatus();

    /*
    Method GetClockData

    Method GetClockData

    */
    inline int GetClockData(int& lpsYear, int& lpsMonth, int& lpsDay, int& lpsDayOfWeek, int& lpsHour, int& lpsMinute, int& lpsSecond);

    /*
    Method GetCpuListOnEther

    Method GetCpuListOnEther

    */
    inline int GetCpuListOnEther(int lTimeOut, int lCpuListSize, int& lplCpuList, int& lplCpuListCount);

    /*
    Method GetCpuType

    Method GetCpuType

    */
    inline int GetCpuType(QString& szCpuName, int& lplCpuCode);

    /*
    Method GetDevice

    Method GetDevice

    */
    inline int GetDevice(const QString& szDevice, int& lplData);

    /*
    Method GetDevice2

    Method GetDevice2

    */
    inline int GetDevice2(const QString& szDevice, int& lpsData);

    /*
    Method Open

    Method Open

    */
    inline int Open();

    /*
    Method ReadBuffer

    Method ReadBuffer

    */
    inline int ReadBuffer(int lStartIO, int lAddress, int lSize, int& lpsData);

    /*
    Method ReadDeviceBlock

    Method ReadDeviceBlock

    */
    inline int ReadDeviceBlock(const QString& szDevice, int lSize, int& lplData);

    /*
    Method ReadDeviceBlock2

    Method ReadDeviceBlock2

    */
    inline int ReadDeviceBlock2(const QString& szDevice, int lSize, int& lpsData);

    /*
    Method ReadDeviceRandom

    Method ReadDeviceRandom

    */
    inline int ReadDeviceRandom(const QString& szDeviceList, int lSize, int& lplData);

    /*
    Method ReadDeviceRandom2

    Method ReadDeviceRandom2

    */
    inline int ReadDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData);

    /*
    Method SetClockData

    Method SetClockData

    */
    inline int SetClockData(int sYear, int sMonth, int sDay, int sDayOfWeek, int sHour, int sMinute, int sSecond);

    /*
    Method SetCpuStatus

    Method SetCpuStatus

    */
    inline int SetCpuStatus(int lOperation);

    /*
    Method SetDevice

    Method SetDevice

    */
    inline int SetDevice(const QString& szDevice, int lData);

    /*
    Method SetDevice2

    Method SetDevice2

    */
    inline int SetDevice2(const QString& szDevice, int sData);

    /*
    Method WriteBuffer

    Method WriteBuffer

    */
    inline int WriteBuffer(int lStartIO, int lAddress, int lSize, int& lpsData);

    /*
    Method WriteDeviceBlock

    Method WriteDeviceBlock

    */
    inline int WriteDeviceBlock(const QString& szDevice, int lSize, int& lplData);

    /*
    Method WriteDeviceBlock2

    Method WriteDeviceBlock2

    */
    inline int WriteDeviceBlock2(const QString& szDevice, int lSize, int& lpsData);

    /*
    Method WriteDeviceRandom

    Method WriteDeviceRandom

    */
    inline int WriteDeviceRandom(const QString& szDeviceList, int lSize, int& lplData);

    /*
    Method WriteDeviceRandom2

    Method WriteDeviceRandom2

    */
    inline int WriteDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface _IActMLProgTypeEvents

class ACTPROGTYPELIB_EXPORT IActMLProgType : public QAxObject
{
public:
    IActMLProgType(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property ActBaudRate

    Property ActBaudRate

    */
    inline QVariant ActBaudRate() const; //Returns the value of ActBaudRate
    inline void SetActBaudRate(const QVariant& value); //Sets the value of the ActBaudRate property

    /*
    Property ActConnectUnitNumber

    Property ActConnectUnitNumber

    */
    inline QVariant ActConnectUnitNumber() const; //Returns the value of ActConnectUnitNumber
    inline void SetActConnectUnitNumber(const QVariant& value); //Sets the value of the ActConnectUnitNumber property

    /*
    Property ActControl

    Property ActControl

    */
    inline QVariant ActControl() const; //Returns the value of ActControl
    inline void SetActControl(const QVariant& value); //Sets the value of the ActControl property

    /*
    Property ActCpuTimeOut

    Property ActCpuTimeOut

    */
    inline QVariant ActCpuTimeOut() const; //Returns the value of ActCpuTimeOut
    inline void SetActCpuTimeOut(const QVariant& value); //Sets the value of the ActCpuTimeOut property

    /*
    Property ActCpuType

    Property ActCpuType

    */
    inline QVariant ActCpuType() const; //Returns the value of ActCpuType
    inline void SetActCpuType(const QVariant& value); //Sets the value of the ActCpuType property

    /*
    Property ActDataBits

    Property ActDataBits

    */
    inline QVariant ActDataBits() const; //Returns the value of ActDataBits
    inline void SetActDataBits(const QVariant& value); //Sets the value of the ActDataBits property

    /*
    Property ActDestinationIONumber

    Property ActDestinationIONumber

    */
    inline QVariant ActDestinationIONumber() const; //Returns the value of ActDestinationIONumber
    inline void SetActDestinationIONumber(const QVariant& value); //Sets the value of the ActDestinationIONumber property

    /*
    Property ActDestinationPortNumber

    Property ActDestinationPortNumber

    */
    inline QVariant ActDestinationPortNumber() const; //Returns the value of ActDestinationPortNumber
    inline void SetActDestinationPortNumber(const QVariant& value); //Sets the value of the ActDestinationPortNumber property

    /*
    Property ActDidPropertyBit

    Property ActDidPropertyBit

    */
    inline QVariant ActDidPropertyBit() const; //Returns the value of ActDidPropertyBit
    inline void SetActDidPropertyBit(const QVariant& value); //Sets the value of the ActDidPropertyBit property

    /*
    Property ActDsidPropertyBit

    Property ActDsidPropertyBit

    */
    inline QVariant ActDsidPropertyBit() const; //Returns the value of ActDsidPropertyBit
    inline void SetActDsidPropertyBit(const QVariant& value); //Sets the value of the ActDsidPropertyBit property

    /*
    Property ActHostAddress

    Property ActHostAddress

    */
    inline QVariant ActHostAddress() const; //Returns the value of ActHostAddress
    inline void SetActHostAddress(const QVariant& value); //Sets the value of the ActHostAddress property

    /*
    Property ActIONumber

    Property ActIONumber

    */
    inline QVariant ActIONumber() const; //Returns the value of ActIONumber
    inline void SetActIONumber(const QVariant& value); //Sets the value of the ActIONumber property

    /*
    Property ActIntelligentPreferenceBit

    Property ActIntelligentPreferenceBit

    */
    inline QVariant ActIntelligentPreferenceBit() const; //Returns the value of ActIntelligentPreferenceBit
    inline void SetActIntelligentPreferenceBit(const QVariant& value); //Sets the value of the ActIntelligentPreferenceBit property

    /*
    Property ActMultiDropChannelNumber

    Property ActMultiDropChannelNumber

    */
    inline QVariant ActMultiDropChannelNumber() const; //Returns the value of ActMultiDropChannelNumber
    inline void SetActMultiDropChannelNumber(const QVariant& value); //Sets the value of the ActMultiDropChannelNumber property

    /*
    Property ActNetworkNumber

    Property ActNetworkNumber

    */
    inline QVariant ActNetworkNumber() const; //Returns the value of ActNetworkNumber
    inline void SetActNetworkNumber(const QVariant& value); //Sets the value of the ActNetworkNumber property

    /*
    Property ActPacketType

    Property ActPacketType

    */
    inline QVariant ActPacketType() const; //Returns the value of ActPacketType
    inline void SetActPacketType(const QVariant& value); //Sets the value of the ActPacketType property

    /*
    Property ActParity

    Property ActParity

    */
    inline QVariant ActParity() const; //Returns the value of ActParity
    inline void SetActParity(const QVariant& value); //Sets the value of the ActParity property

    /*
    Property ActPassword

    Property ActPassword

    */
    inline QVariant ActPassword() const; //Returns the value of ActPassword
    inline void SetActPassword(const QVariant& value); //Sets the value of the ActPassword property

    /*
    Property ActPortNumber

    Property ActPortNumber

    */
    inline QVariant ActPortNumber() const; //Returns the value of ActPortNumber
    inline void SetActPortNumber(const QVariant& value); //Sets the value of the ActPortNumber property

    /*
    Property ActProtocolType

    Property ActProtocolType

    */
    inline QVariant ActProtocolType() const; //Returns the value of ActProtocolType
    inline void SetActProtocolType(const QVariant& value); //Sets the value of the ActProtocolType property

    /*
    Property ActSourceNetworkNumber

    Property ActSourceNetworkNumber

    */
    inline QVariant ActSourceNetworkNumber() const; //Returns the value of ActSourceNetworkNumber
    inline void SetActSourceNetworkNumber(const QVariant& value); //Sets the value of the ActSourceNetworkNumber property

    /*
    Property ActSourceStationNumber

    Property ActSourceStationNumber

    */
    inline QVariant ActSourceStationNumber() const; //Returns the value of ActSourceStationNumber
    inline void SetActSourceStationNumber(const QVariant& value); //Sets the value of the ActSourceStationNumber property

    /*
    Property ActStationNumber

    Property ActStationNumber

    */
    inline QVariant ActStationNumber() const; //Returns the value of ActStationNumber
    inline void SetActStationNumber(const QVariant& value); //Sets the value of the ActStationNumber property

    /*
    Property ActStopBits

    Property ActStopBits

    */
    inline QVariant ActStopBits() const; //Returns the value of ActStopBits
    inline void SetActStopBits(const QVariant& value); //Sets the value of the ActStopBits property

    /*
    Property ActSumCheck

    Property ActSumCheck

    */
    inline QVariant ActSumCheck() const; //Returns the value of ActSumCheck
    inline void SetActSumCheck(const QVariant& value); //Sets the value of the ActSumCheck property

    /*
    Property ActTargetSimulator

    Property ActTargetSimulator

    */
    inline QVariant ActTargetSimulator() const; //Returns the value of ActTargetSimulator
    inline void SetActTargetSimulator(const QVariant& value); //Sets the value of the ActTargetSimulator property

    /*
    Property ActThroughNetworkType

    Property ActThroughNetworkType

    */
    inline QVariant ActThroughNetworkType() const; //Returns the value of ActThroughNetworkType
    inline void SetActThroughNetworkType(const QVariant& value); //Sets the value of the ActThroughNetworkType property

    /*
    Property ActTimeOut

    Property ActTimeOut

    */
    inline QVariant ActTimeOut() const; //Returns the value of ActTimeOut
    inline void SetActTimeOut(const QVariant& value); //Sets the value of the ActTimeOut property

    /*
    Property ActUnitNumber

    Property ActUnitNumber

    */
    inline QVariant ActUnitNumber() const; //Returns the value of ActUnitNumber
    inline void SetActUnitNumber(const QVariant& value); //Sets the value of the ActUnitNumber property

    /*
    Property ActUnitType

    Property ActUnitType

    */
    inline QVariant ActUnitType() const; //Returns the value of ActUnitType
    inline void SetActUnitType(const QVariant& value); //Sets the value of the ActUnitType property

    /*
    Method Close

    Method Close

    */
    inline QVariant Close();

    /*
    Method EntryDeviceStatus

    Method EntryDeviceStatus

    */
    inline QVariant EntryDeviceStatus(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varMonitorCycle, const QVariant& varData);

    /*
    Method FreeDeviceStatus

    Method FreeDeviceStatus

    */
    inline QVariant FreeDeviceStatus();

    /*
    Method GetClockData

    Method GetClockData

    */
    inline QVariant GetClockData(QVariant& lpvarYear, QVariant& lpvarMonth, QVariant& lpvarDay, QVariant& lpvarDayOfWeek, QVariant& lpvarHour, QVariant& lpvarMinute, QVariant& lpvarSecond);

    /*
    Method GetCpuType

    Method GetCpuType

    */
    inline QVariant GetCpuType(QVariant& lpvarCpuName, QVariant& lpvarCpuCode);

    /*
    Method GetDevice

    Method GetDevice

    */
    inline QVariant GetDevice(const QVariant& varDevice, QVariant& lpvarData);

    /*
    Method GetDevice2

    Method GetDevice2

    */
    inline QVariant GetDevice2(const QVariant& varDevice, QVariant& lpvarData);

    /*
    Method Open

    Method Open

    */
    inline QVariant Open();

    /*
    Method ReadBuffer

    Method ReadBuffer

    */
    inline QVariant ReadBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varReadSize, QVariant& lpvarData);

    /*
    Method ReadDeviceBlock

    Method ReadDeviceBlock

    */
    inline QVariant ReadDeviceBlock(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceBlock2

    Method ReadDeviceBlock2

    */
    inline QVariant ReadDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceRandom

    Method ReadDeviceRandom

    */
    inline QVariant ReadDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceRandom2

    Method ReadDeviceRandom2

    */
    inline QVariant ReadDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method SetClockData

    Method SetClockData

    */
    inline QVariant SetClockData(const QVariant& varYear, const QVariant& varMonth, const QVariant& varDay, const QVariant& varDayOfWeek, const QVariant& varHour, const QVariant& varMinute, const QVariant& varSecond);

    /*
    Method SetCpuStatus

    Method SetCpuStatus

    */
    inline QVariant SetCpuStatus(const QVariant& varOperation);

    /*
    Method SetDevice

    Method SetDevice

    */
    inline QVariant SetDevice(const QVariant& varDevice, const QVariant& varData);

    /*
    Method SetDevice2

    Method SetDevice2

    */
    inline QVariant SetDevice2(const QVariant& varDevice, const QVariant& varData);

    /*
    Method WriteBuffer

    Method WriteBuffer

    */
    inline QVariant WriteBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varWriteSize, const QVariant& varData);

    /*
    Method WriteDeviceBlock

    Method WriteDeviceBlock

    */
    inline QVariant WriteDeviceBlock(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceBlock2

    Method WriteDeviceBlock2

    */
    inline QVariant WriteDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceRandom

    Method WriteDeviceRandom

    */
    inline QVariant WriteDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceRandom2

    Method WriteDeviceRandom2

    */
    inline QVariant WriteDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class ACTPROGTYPELIB_EXPORT ActProgType : public QAxWidget
{
public:
    ActProgType(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl(QStringLiteral("{78703d55-4042-4046-845d-7bbe83fb2f44}"));
    }

    ActProgType(IActProgType *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActATCommand

    Property ActATCommand

    */
    inline QString ActATCommand() const; //Returns the value of ActATCommand
    inline void SetActATCommand(const QString& value); //Sets the value of the ActATCommand property

    /*
    Property ActATCommandPasswordCancelRetryTimes

    Property ActATCommandPasswordCancelRetryTimes

    */
    inline int ActATCommandPasswordCancelRetryTimes() const; //Returns the value of ActATCommandPasswordCancelRetryTimes
    inline void SetActATCommandPasswordCancelRetryTimes(int value); //Sets the value of the ActATCommandPasswordCancelRetryTimes property

    /*
    Property ActATCommandResponseWaitTime

    Property ActATCommandResponseWaitTime

    */
    inline int ActATCommandResponseWaitTime() const; //Returns the value of ActATCommandResponseWaitTime
    inline void SetActATCommandResponseWaitTime(int value); //Sets the value of the ActATCommandResponseWaitTime property

    /*
    Property ActBaudRate

    Property ActBaudRate

    */
    inline int ActBaudRate() const; //Returns the value of ActBaudRate
    inline void SetActBaudRate(int value); //Sets the value of the ActBaudRate property

    /*
    Property ActCallbackCancelWaitTime

    Property ActCallbackCancelWaitTime

    */
    inline int ActCallbackCancelWaitTime() const; //Returns the value of ActCallbackCancelWaitTime
    inline void SetActCallbackCancelWaitTime(int value); //Sets the value of the ActCallbackCancelWaitTime property

    /*
    Property ActCallbackDelayTime

    Property ActCallbackDelayTime

    */
    inline int ActCallbackDelayTime() const; //Returns the value of ActCallbackDelayTime
    inline void SetActCallbackDelayTime(int value); //Sets the value of the ActCallbackDelayTime property

    /*
    Property ActCallbackNumber

    Property ActCallbackNumber

    */
    inline QString ActCallbackNumber() const; //Returns the value of ActCallbackNumber
    inline void SetActCallbackNumber(const QString& value); //Sets the value of the ActCallbackNumber property

    /*
    Property ActCallbackReceptionWaitingTimeOut

    Property ActCallbackReceptionWaitingTimeOut

    */
    inline int ActCallbackReceptionWaitingTimeOut() const; //Returns the value of ActCallbackReceptionWaitingTimeOut
    inline void SetActCallbackReceptionWaitingTimeOut(int value); //Sets the value of the ActCallbackReceptionWaitingTimeOut property

    /*
    Property ActConnectUnitNumber

    Property ActConnectUnitNumber

    */
    inline int ActConnectUnitNumber() const; //Returns the value of ActConnectUnitNumber
    inline void SetActConnectUnitNumber(int value); //Sets the value of the ActConnectUnitNumber property

    /*
    Property ActConnectWay

    Property ActConnectWay

    */
    inline int ActConnectWay() const; //Returns the value of ActConnectWay
    inline void SetActConnectWay(int value); //Sets the value of the ActConnectWay property

    /*
    Property ActConnectionCDWaitTime

    Property ActConnectionCDWaitTime

    */
    inline int ActConnectionCDWaitTime() const; //Returns the value of ActConnectionCDWaitTime
    inline void SetActConnectionCDWaitTime(int value); //Sets the value of the ActConnectionCDWaitTime property

    /*
    Property ActConnectionModemReportWaitTime

    Property ActConnectionModemReportWaitTime

    */
    inline int ActConnectionModemReportWaitTime() const; //Returns the value of ActConnectionModemReportWaitTime
    inline void SetActConnectionModemReportWaitTime(int value); //Sets the value of the ActConnectionModemReportWaitTime property

    /*
    Property ActControl

    Property ActControl

    */
    inline int ActControl() const; //Returns the value of ActControl
    inline void SetActControl(int value); //Sets the value of the ActControl property

    /*
    Property ActCpuTimeOut

    Property ActCpuTimeOut

    */
    inline int ActCpuTimeOut() const; //Returns the value of ActCpuTimeOut
    inline void SetActCpuTimeOut(int value); //Sets the value of the ActCpuTimeOut property

    /*
    Property ActCpuType

    Property ActCpuType

    */
    inline int ActCpuType() const; //Returns the value of ActCpuType
    inline void SetActCpuType(int value); //Sets the value of the ActCpuType property

    /*
    Property ActDataBits

    Property ActDataBits

    */
    inline int ActDataBits() const; //Returns the value of ActDataBits
    inline void SetActDataBits(int value); //Sets the value of the ActDataBits property

    /*
    Property ActDestinationIONumber

    Property ActDestinationIONumber

    */
    inline int ActDestinationIONumber() const; //Returns the value of ActDestinationIONumber
    inline void SetActDestinationIONumber(int value); //Sets the value of the ActDestinationIONumber property

    /*
    Property ActDestinationPortNumber

    Property ActDestinationPortNumber

    */
    inline int ActDestinationPortNumber() const; //Returns the value of ActDestinationPortNumber
    inline void SetActDestinationPortNumber(int value); //Sets the value of the ActDestinationPortNumber property

    /*
    Property ActDialNumber

    Property ActDialNumber

    */
    inline QString ActDialNumber() const; //Returns the value of ActDialNumber
    inline void SetActDialNumber(const QString& value); //Sets the value of the ActDialNumber property

    /*
    Property ActDidPropertyBit

    Property ActDidPropertyBit

    */
    inline int ActDidPropertyBit() const; //Returns the value of ActDidPropertyBit
    inline void SetActDidPropertyBit(int value); //Sets the value of the ActDidPropertyBit property

    /*
    Property ActDisconnectionCDWaitTime

    Property ActDisconnectionCDWaitTime

    */
    inline int ActDisconnectionCDWaitTime() const; //Returns the value of ActDisconnectionCDWaitTime
    inline void SetActDisconnectionCDWaitTime(int value); //Sets the value of the ActDisconnectionCDWaitTime property

    /*
    Property ActDisconnectionDelayTime

    Property ActDisconnectionDelayTime

    */
    inline int ActDisconnectionDelayTime() const; //Returns the value of ActDisconnectionDelayTime
    inline void SetActDisconnectionDelayTime(int value); //Sets the value of the ActDisconnectionDelayTime property

    /*
    Property ActDsidPropertyBit

    Property ActDsidPropertyBit

    */
    inline int ActDsidPropertyBit() const; //Returns the value of ActDsidPropertyBit
    inline void SetActDsidPropertyBit(int value); //Sets the value of the ActDsidPropertyBit property

    /*
    Property ActHostAddress

    Property ActHostAddress

    */
    inline QString ActHostAddress() const; //Returns the value of ActHostAddress
    inline void SetActHostAddress(const QString& value); //Sets the value of the ActHostAddress property

    /*
    Property ActIONumber

    Property ActIONumber

    */
    inline int ActIONumber() const; //Returns the value of ActIONumber
    inline void SetActIONumber(int value); //Sets the value of the ActIONumber property

    /*
    Property ActIntelligentPreferenceBit

    Property ActIntelligentPreferenceBit

    */
    inline int ActIntelligentPreferenceBit() const; //Returns the value of ActIntelligentPreferenceBit
    inline void SetActIntelligentPreferenceBit(int value); //Sets the value of the ActIntelligentPreferenceBit property

    /*
    Property ActLineType

    Property ActLineType

    */
    inline int ActLineType() const; //Returns the value of ActLineType
    inline void SetActLineType(int value); //Sets the value of the ActLineType property

    /*
    Property ActMultiDropChannelNumber

    Property ActMultiDropChannelNumber

    */
    inline int ActMultiDropChannelNumber() const; //Returns the value of ActMultiDropChannelNumber
    inline void SetActMultiDropChannelNumber(int value); //Sets the value of the ActMultiDropChannelNumber property

    /*
    Property ActNetworkNumber

    Property ActNetworkNumber

    */
    inline int ActNetworkNumber() const; //Returns the value of ActNetworkNumber
    inline void SetActNetworkNumber(int value); //Sets the value of the ActNetworkNumber property

    /*
    Property ActOutsideLineNumber

    Property ActOutsideLineNumber

    */
    inline QString ActOutsideLineNumber() const; //Returns the value of ActOutsideLineNumber
    inline void SetActOutsideLineNumber(const QString& value); //Sets the value of the ActOutsideLineNumber property

    /*
    Property ActPacketType

    Property ActPacketType

    */
    inline int ActPacketType() const; //Returns the value of ActPacketType
    inline void SetActPacketType(int value); //Sets the value of the ActPacketType property

    /*
    Property ActParity

    Property ActParity

    */
    inline int ActParity() const; //Returns the value of ActParity
    inline void SetActParity(int value); //Sets the value of the ActParity property

    /*
    Property ActPassword

    Property ActPassword

    */
    inline QString ActPassword() const; //Returns the value of ActPassword
    inline void SetActPassword(const QString& value); //Sets the value of the ActPassword property

    /*
    Property ActPasswordCancelResponseWaitTime

    Property ActPasswordCancelResponseWaitTime

    */
    inline int ActPasswordCancelResponseWaitTime() const; //Returns the value of ActPasswordCancelResponseWaitTime
    inline void SetActPasswordCancelResponseWaitTime(int value); //Sets the value of the ActPasswordCancelResponseWaitTime property

    /*
    Property ActPortNumber

    Property ActPortNumber

    */
    inline int ActPortNumber() const; //Returns the value of ActPortNumber
    inline void SetActPortNumber(int value); //Sets the value of the ActPortNumber property

    /*
    Property ActProtocolType

    Property ActProtocolType

    */
    inline int ActProtocolType() const; //Returns the value of ActProtocolType
    inline void SetActProtocolType(int value); //Sets the value of the ActProtocolType property

    /*
    Property ActSourceNetworkNumber

    Property ActSourceNetworkNumber

    */
    inline int ActSourceNetworkNumber() const; //Returns the value of ActSourceNetworkNumber
    inline void SetActSourceNetworkNumber(int value); //Sets the value of the ActSourceNetworkNumber property

    /*
    Property ActSourceStationNumber

    Property ActSourceStationNumber

    */
    inline int ActSourceStationNumber() const; //Returns the value of ActSourceStationNumber
    inline void SetActSourceStationNumber(int value); //Sets the value of the ActSourceStationNumber property

    /*
    Property ActStationNumber

    Property ActStationNumber

    */
    inline int ActStationNumber() const; //Returns the value of ActStationNumber
    inline void SetActStationNumber(int value); //Sets the value of the ActStationNumber property

    /*
    Property ActStopBits

    Property ActStopBits

    */
    inline int ActStopBits() const; //Returns the value of ActStopBits
    inline void SetActStopBits(int value); //Sets the value of the ActStopBits property

    /*
    Property ActSumCheck

    Property ActSumCheck

    */
    inline int ActSumCheck() const; //Returns the value of ActSumCheck
    inline void SetActSumCheck(int value); //Sets the value of the ActSumCheck property

    /*
    Property ActTargetSimulator

    Property ActTargetSimulator

    */
    inline int ActTargetSimulator() const; //Returns the value of ActTargetSimulator
    inline void SetActTargetSimulator(int value); //Sets the value of the ActTargetSimulator property

    /*
    Property ActThroughNetworkType

    Property ActThroughNetworkType

    */
    inline int ActThroughNetworkType() const; //Returns the value of ActThroughNetworkType
    inline void SetActThroughNetworkType(int value); //Sets the value of the ActThroughNetworkType property

    /*
    Property ActTimeOut

    Property ActTimeOut

    */
    inline int ActTimeOut() const; //Returns the value of ActTimeOut
    inline void SetActTimeOut(int value); //Sets the value of the ActTimeOut property

    /*
    Property ActTransmissionDelayTime

    Property ActTransmissionDelayTime

    */
    inline int ActTransmissionDelayTime() const; //Returns the value of ActTransmissionDelayTime
    inline void SetActTransmissionDelayTime(int value); //Sets the value of the ActTransmissionDelayTime property

    /*
    Property ActUnitNumber

    Property ActUnitNumber

    */
    inline int ActUnitNumber() const; //Returns the value of ActUnitNumber
    inline void SetActUnitNumber(int value); //Sets the value of the ActUnitNumber property

    /*
    Property ActUnitType

    Property ActUnitType

    */
    inline int ActUnitType() const; //Returns the value of ActUnitType
    inline void SetActUnitType(int value); //Sets the value of the ActUnitType property

    /*
    Method CheckDeviceString

    Method CheckDeviceString

    */
    inline int CheckDeviceString(const QString& szDevice, int lCheckType, int lSize, int& lplDeviceType, QString& lpszDeviceName, int& lplDeviceNumber, int& lplDeviceRadix);

    /*
    Method Close

    Method Close

    */
    inline int Close();

    /*
    Method Connect

    Method Connect

    */
    inline int Connect();

    /*
    Method Disconnect

    Method Disconnect

    */
    inline int Disconnect();

    /*
    Method EntryDeviceStatus

    Method EntryDeviceStatus

    */
    inline int EntryDeviceStatus(const QString& szDeviceList, int lSize, int lMonitorCycle, int& lplData);

    /*
    Method FreeDeviceStatus

    Method FreeDeviceStatus

    */
    inline int FreeDeviceStatus();

    /*
    Method GetClockData

    Method GetClockData

    */
    inline int GetClockData(int& lpsYear, int& lpsMonth, int& lpsDay, int& lpsDayOfWeek, int& lpsHour, int& lpsMinute, int& lpsSecond);

    /*
    Method GetCpuListOnEther

    Method GetCpuListOnEther

    */
    inline int GetCpuListOnEther(int lTimeOut, int lCpuListSize, int& lplCpuList, int& lplCpuListCount);

    /*
    Method GetCpuType

    Method GetCpuType

    */
    inline int GetCpuType(QString& szCpuName, int& lplCpuCode);

    /*
    Method GetDevice

    Method GetDevice

    */
    inline int GetDevice(const QString& szDevice, int& lplData);

    /*
    Method GetDevice2

    Method GetDevice2

    */
    inline int GetDevice2(const QString& szDevice, int& lpsData);

    /*
    Method Open

    Method Open

    */
    inline int Open();

    /*
    Method ReadBuffer

    Method ReadBuffer

    */
    inline int ReadBuffer(int lStartIO, int lAddress, int lSize, int& lpsData);

    /*
    Method ReadDeviceBlock

    Method ReadDeviceBlock

    */
    inline int ReadDeviceBlock(const QString& szDevice, int lSize, int& lplData);

    /*
    Method ReadDeviceBlock2

    Method ReadDeviceBlock2

    */
    inline int ReadDeviceBlock2(const QString& szDevice, int lSize, int& lpsData);

    /*
    Method ReadDeviceRandom

    Method ReadDeviceRandom

    */
    inline int ReadDeviceRandom(const QString& szDeviceList, int lSize, int& lplData);

    /*
    Method ReadDeviceRandom2

    Method ReadDeviceRandom2

    */
    inline int ReadDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData);

    /*
    Method SetClockData

    Method SetClockData

    */
    inline int SetClockData(int sYear, int sMonth, int sDay, int sDayOfWeek, int sHour, int sMinute, int sSecond);

    /*
    Method SetCpuStatus

    Method SetCpuStatus

    */
    inline int SetCpuStatus(int lOperation);

    /*
    Method SetDevice

    Method SetDevice

    */
    inline int SetDevice(const QString& szDevice, int lData);

    /*
    Method SetDevice2

    Method SetDevice2

    */
    inline int SetDevice2(const QString& szDevice, int sData);

    /*
    Method WriteBuffer

    Method WriteBuffer

    */
    inline int WriteBuffer(int lStartIO, int lAddress, int lSize, int& lpsData);

    /*
    Method WriteDeviceBlock

    Method WriteDeviceBlock

    */
    inline int WriteDeviceBlock(const QString& szDevice, int lSize, int& lplData);

    /*
    Method WriteDeviceBlock2

    Method WriteDeviceBlock2

    */
    inline int WriteDeviceBlock2(const QString& szDevice, int lSize, int& lpsData);

    /*
    Method WriteDeviceRandom

    Method WriteDeviceRandom

    */
    inline int WriteDeviceRandom(const QString& szDeviceList, int lSize, int& lplData);

    /*
    Method WriteDeviceRandom2

    Method WriteDeviceRandom2

    */
    inline int WriteDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class ACTPROGTYPELIB_EXPORT ActMLProgType : public QAxWidget
{
public:
    ActMLProgType(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl(QStringLiteral("{d10d1fe3-1d76-4b8b-adfc-ce03f9337cd3}"));
    }

    ActMLProgType(IActMLProgType *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActBaudRate

    Property ActBaudRate

    */
    inline QVariant ActBaudRate() const; //Returns the value of ActBaudRate
    inline void SetActBaudRate(const QVariant& value); //Sets the value of the ActBaudRate property

    /*
    Property ActConnectUnitNumber

    Property ActConnectUnitNumber

    */
    inline QVariant ActConnectUnitNumber() const; //Returns the value of ActConnectUnitNumber
    inline void SetActConnectUnitNumber(const QVariant& value); //Sets the value of the ActConnectUnitNumber property

    /*
    Property ActControl

    Property ActControl

    */
    inline QVariant ActControl() const; //Returns the value of ActControl
    inline void SetActControl(const QVariant& value); //Sets the value of the ActControl property

    /*
    Property ActCpuTimeOut

    Property ActCpuTimeOut

    */
    inline QVariant ActCpuTimeOut() const; //Returns the value of ActCpuTimeOut
    inline void SetActCpuTimeOut(const QVariant& value); //Sets the value of the ActCpuTimeOut property

    /*
    Property ActCpuType

    Property ActCpuType

    */
    inline QVariant ActCpuType() const; //Returns the value of ActCpuType
    inline void SetActCpuType(const QVariant& value); //Sets the value of the ActCpuType property

    /*
    Property ActDataBits

    Property ActDataBits

    */
    inline QVariant ActDataBits() const; //Returns the value of ActDataBits
    inline void SetActDataBits(const QVariant& value); //Sets the value of the ActDataBits property

    /*
    Property ActDestinationIONumber

    Property ActDestinationIONumber

    */
    inline QVariant ActDestinationIONumber() const; //Returns the value of ActDestinationIONumber
    inline void SetActDestinationIONumber(const QVariant& value); //Sets the value of the ActDestinationIONumber property

    /*
    Property ActDestinationPortNumber

    Property ActDestinationPortNumber

    */
    inline QVariant ActDestinationPortNumber() const; //Returns the value of ActDestinationPortNumber
    inline void SetActDestinationPortNumber(const QVariant& value); //Sets the value of the ActDestinationPortNumber property

    /*
    Property ActDidPropertyBit

    Property ActDidPropertyBit

    */
    inline QVariant ActDidPropertyBit() const; //Returns the value of ActDidPropertyBit
    inline void SetActDidPropertyBit(const QVariant& value); //Sets the value of the ActDidPropertyBit property

    /*
    Property ActDsidPropertyBit

    Property ActDsidPropertyBit

    */
    inline QVariant ActDsidPropertyBit() const; //Returns the value of ActDsidPropertyBit
    inline void SetActDsidPropertyBit(const QVariant& value); //Sets the value of the ActDsidPropertyBit property

    /*
    Property ActHostAddress

    Property ActHostAddress

    */
    inline QVariant ActHostAddress() const; //Returns the value of ActHostAddress
    inline void SetActHostAddress(const QVariant& value); //Sets the value of the ActHostAddress property

    /*
    Property ActIONumber

    Property ActIONumber

    */
    inline QVariant ActIONumber() const; //Returns the value of ActIONumber
    inline void SetActIONumber(const QVariant& value); //Sets the value of the ActIONumber property

    /*
    Property ActIntelligentPreferenceBit

    Property ActIntelligentPreferenceBit

    */
    inline QVariant ActIntelligentPreferenceBit() const; //Returns the value of ActIntelligentPreferenceBit
    inline void SetActIntelligentPreferenceBit(const QVariant& value); //Sets the value of the ActIntelligentPreferenceBit property

    /*
    Property ActMultiDropChannelNumber

    Property ActMultiDropChannelNumber

    */
    inline QVariant ActMultiDropChannelNumber() const; //Returns the value of ActMultiDropChannelNumber
    inline void SetActMultiDropChannelNumber(const QVariant& value); //Sets the value of the ActMultiDropChannelNumber property

    /*
    Property ActNetworkNumber

    Property ActNetworkNumber

    */
    inline QVariant ActNetworkNumber() const; //Returns the value of ActNetworkNumber
    inline void SetActNetworkNumber(const QVariant& value); //Sets the value of the ActNetworkNumber property

    /*
    Property ActPacketType

    Property ActPacketType

    */
    inline QVariant ActPacketType() const; //Returns the value of ActPacketType
    inline void SetActPacketType(const QVariant& value); //Sets the value of the ActPacketType property

    /*
    Property ActParity

    Property ActParity

    */
    inline QVariant ActParity() const; //Returns the value of ActParity
    inline void SetActParity(const QVariant& value); //Sets the value of the ActParity property

    /*
    Property ActPassword

    Property ActPassword

    */
    inline QVariant ActPassword() const; //Returns the value of ActPassword
    inline void SetActPassword(const QVariant& value); //Sets the value of the ActPassword property

    /*
    Property ActPortNumber

    Property ActPortNumber

    */
    inline QVariant ActPortNumber() const; //Returns the value of ActPortNumber
    inline void SetActPortNumber(const QVariant& value); //Sets the value of the ActPortNumber property

    /*
    Property ActProtocolType

    Property ActProtocolType

    */
    inline QVariant ActProtocolType() const; //Returns the value of ActProtocolType
    inline void SetActProtocolType(const QVariant& value); //Sets the value of the ActProtocolType property

    /*
    Property ActSourceNetworkNumber

    Property ActSourceNetworkNumber

    */
    inline QVariant ActSourceNetworkNumber() const; //Returns the value of ActSourceNetworkNumber
    inline void SetActSourceNetworkNumber(const QVariant& value); //Sets the value of the ActSourceNetworkNumber property

    /*
    Property ActSourceStationNumber

    Property ActSourceStationNumber

    */
    inline QVariant ActSourceStationNumber() const; //Returns the value of ActSourceStationNumber
    inline void SetActSourceStationNumber(const QVariant& value); //Sets the value of the ActSourceStationNumber property

    /*
    Property ActStationNumber

    Property ActStationNumber

    */
    inline QVariant ActStationNumber() const; //Returns the value of ActStationNumber
    inline void SetActStationNumber(const QVariant& value); //Sets the value of the ActStationNumber property

    /*
    Property ActStopBits

    Property ActStopBits

    */
    inline QVariant ActStopBits() const; //Returns the value of ActStopBits
    inline void SetActStopBits(const QVariant& value); //Sets the value of the ActStopBits property

    /*
    Property ActSumCheck

    Property ActSumCheck

    */
    inline QVariant ActSumCheck() const; //Returns the value of ActSumCheck
    inline void SetActSumCheck(const QVariant& value); //Sets the value of the ActSumCheck property

    /*
    Property ActTargetSimulator

    Property ActTargetSimulator

    */
    inline QVariant ActTargetSimulator() const; //Returns the value of ActTargetSimulator
    inline void SetActTargetSimulator(const QVariant& value); //Sets the value of the ActTargetSimulator property

    /*
    Property ActThroughNetworkType

    Property ActThroughNetworkType

    */
    inline QVariant ActThroughNetworkType() const; //Returns the value of ActThroughNetworkType
    inline void SetActThroughNetworkType(const QVariant& value); //Sets the value of the ActThroughNetworkType property

    /*
    Property ActTimeOut

    Property ActTimeOut

    */
    inline QVariant ActTimeOut() const; //Returns the value of ActTimeOut
    inline void SetActTimeOut(const QVariant& value); //Sets the value of the ActTimeOut property

    /*
    Property ActUnitNumber

    Property ActUnitNumber

    */
    inline QVariant ActUnitNumber() const; //Returns the value of ActUnitNumber
    inline void SetActUnitNumber(const QVariant& value); //Sets the value of the ActUnitNumber property

    /*
    Property ActUnitType

    Property ActUnitType

    */
    inline QVariant ActUnitType() const; //Returns the value of ActUnitType
    inline void SetActUnitType(const QVariant& value); //Sets the value of the ActUnitType property

    /*
    Method Close

    Method Close

    */
    inline QVariant Close();

    /*
    Method EntryDeviceStatus

    Method EntryDeviceStatus

    */
    inline QVariant EntryDeviceStatus(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varMonitorCycle, const QVariant& varData);

    /*
    Method FreeDeviceStatus

    Method FreeDeviceStatus

    */
    inline QVariant FreeDeviceStatus();

    /*
    Method GetClockData

    Method GetClockData

    */
    inline QVariant GetClockData(QVariant& lpvarYear, QVariant& lpvarMonth, QVariant& lpvarDay, QVariant& lpvarDayOfWeek, QVariant& lpvarHour, QVariant& lpvarMinute, QVariant& lpvarSecond);

    /*
    Method GetCpuType

    Method GetCpuType

    */
    inline QVariant GetCpuType(QVariant& lpvarCpuName, QVariant& lpvarCpuCode);

    /*
    Method GetDevice

    Method GetDevice

    */
    inline QVariant GetDevice(const QVariant& varDevice, QVariant& lpvarData);

    /*
    Method GetDevice2

    Method GetDevice2

    */
    inline QVariant GetDevice2(const QVariant& varDevice, QVariant& lpvarData);

    /*
    Method Open

    Method Open

    */
    inline QVariant Open();

    /*
    Method ReadBuffer

    Method ReadBuffer

    */
    inline QVariant ReadBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varReadSize, QVariant& lpvarData);

    /*
    Method ReadDeviceBlock

    Method ReadDeviceBlock

    */
    inline QVariant ReadDeviceBlock(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceBlock2

    Method ReadDeviceBlock2

    */
    inline QVariant ReadDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceRandom

    Method ReadDeviceRandom

    */
    inline QVariant ReadDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceRandom2

    Method ReadDeviceRandom2

    */
    inline QVariant ReadDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method SetClockData

    Method SetClockData

    */
    inline QVariant SetClockData(const QVariant& varYear, const QVariant& varMonth, const QVariant& varDay, const QVariant& varDayOfWeek, const QVariant& varHour, const QVariant& varMinute, const QVariant& varSecond);

    /*
    Method SetCpuStatus

    Method SetCpuStatus

    */
    inline QVariant SetCpuStatus(const QVariant& varOperation);

    /*
    Method SetDevice

    Method SetDevice

    */
    inline QVariant SetDevice(const QVariant& varDevice, const QVariant& varData);

    /*
    Method SetDevice2

    Method SetDevice2

    */
    inline QVariant SetDevice2(const QVariant& varDevice, const QVariant& varData);

    /*
    Method WriteBuffer

    Method WriteBuffer

    */
    inline QVariant WriteBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varWriteSize, const QVariant& varData);

    /*
    Method WriteDeviceBlock

    Method WriteDeviceBlock

    */
    inline QVariant WriteDeviceBlock(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceBlock2

    Method WriteDeviceBlock2

    */
    inline QVariant WriteDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceRandom

    Method WriteDeviceRandom

    */
    inline QVariant WriteDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceRandom2

    Method WriteDeviceRandom2

    */
    inline QVariant WriteDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_ACTPROGTYPELIB_NOINLINES
inline QString ActProgType::ActATCommand() const
{
    QVariant qax_result = property("ActATCommand");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ActProgType::SetActATCommand(const QString& value){ setProperty("ActATCommand", QVariant(value)); }

inline int ActProgType::ActATCommandPasswordCancelRetryTimes() const
{
    QVariant qax_result = property("ActATCommandPasswordCancelRetryTimes");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActATCommandPasswordCancelRetryTimes(int value){ setProperty("ActATCommandPasswordCancelRetryTimes", QVariant(value)); }

inline int ActProgType::ActATCommandResponseWaitTime() const
{
    QVariant qax_result = property("ActATCommandResponseWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActATCommandResponseWaitTime(int value){ setProperty("ActATCommandResponseWaitTime", QVariant(value)); }

inline int ActProgType::ActBaudRate() const
{
    QVariant qax_result = property("ActBaudRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActBaudRate(int value){ setProperty("ActBaudRate", QVariant(value)); }

inline int ActProgType::ActCallbackCancelWaitTime() const
{
    QVariant qax_result = property("ActCallbackCancelWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActCallbackCancelWaitTime(int value){ setProperty("ActCallbackCancelWaitTime", QVariant(value)); }

inline int ActProgType::ActCallbackDelayTime() const
{
    QVariant qax_result = property("ActCallbackDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActCallbackDelayTime(int value){ setProperty("ActCallbackDelayTime", QVariant(value)); }

inline QString ActProgType::ActCallbackNumber() const
{
    QVariant qax_result = property("ActCallbackNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ActProgType::SetActCallbackNumber(const QString& value){ setProperty("ActCallbackNumber", QVariant(value)); }

inline int ActProgType::ActCallbackReceptionWaitingTimeOut() const
{
    QVariant qax_result = property("ActCallbackReceptionWaitingTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActCallbackReceptionWaitingTimeOut(int value){ setProperty("ActCallbackReceptionWaitingTimeOut", QVariant(value)); }

inline int ActProgType::ActConnectUnitNumber() const
{
    QVariant qax_result = property("ActConnectUnitNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActConnectUnitNumber(int value){ setProperty("ActConnectUnitNumber", QVariant(value)); }

inline int ActProgType::ActConnectWay() const
{
    QVariant qax_result = property("ActConnectWay");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActConnectWay(int value){ setProperty("ActConnectWay", QVariant(value)); }

inline int ActProgType::ActConnectionCDWaitTime() const
{
    QVariant qax_result = property("ActConnectionCDWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActConnectionCDWaitTime(int value){ setProperty("ActConnectionCDWaitTime", QVariant(value)); }

inline int ActProgType::ActConnectionModemReportWaitTime() const
{
    QVariant qax_result = property("ActConnectionModemReportWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActConnectionModemReportWaitTime(int value){ setProperty("ActConnectionModemReportWaitTime", QVariant(value)); }

inline int ActProgType::ActControl() const
{
    QVariant qax_result = property("ActControl");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActControl(int value){ setProperty("ActControl", QVariant(value)); }

inline int ActProgType::ActCpuTimeOut() const
{
    QVariant qax_result = property("ActCpuTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActCpuTimeOut(int value){ setProperty("ActCpuTimeOut", QVariant(value)); }

inline int ActProgType::ActCpuType() const
{
    QVariant qax_result = property("ActCpuType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActCpuType(int value){ setProperty("ActCpuType", QVariant(value)); }

inline int ActProgType::ActDataBits() const
{
    QVariant qax_result = property("ActDataBits");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActDataBits(int value){ setProperty("ActDataBits", QVariant(value)); }

inline int ActProgType::ActDestinationIONumber() const
{
    QVariant qax_result = property("ActDestinationIONumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActDestinationIONumber(int value){ setProperty("ActDestinationIONumber", QVariant(value)); }

inline int ActProgType::ActDestinationPortNumber() const
{
    QVariant qax_result = property("ActDestinationPortNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActDestinationPortNumber(int value){ setProperty("ActDestinationPortNumber", QVariant(value)); }

inline QString ActProgType::ActDialNumber() const
{
    QVariant qax_result = property("ActDialNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ActProgType::SetActDialNumber(const QString& value){ setProperty("ActDialNumber", QVariant(value)); }

inline int ActProgType::ActDidPropertyBit() const
{
    QVariant qax_result = property("ActDidPropertyBit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActDidPropertyBit(int value){ setProperty("ActDidPropertyBit", QVariant(value)); }

inline int ActProgType::ActDisconnectionCDWaitTime() const
{
    QVariant qax_result = property("ActDisconnectionCDWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActDisconnectionCDWaitTime(int value){ setProperty("ActDisconnectionCDWaitTime", QVariant(value)); }

inline int ActProgType::ActDisconnectionDelayTime() const
{
    QVariant qax_result = property("ActDisconnectionDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActDisconnectionDelayTime(int value){ setProperty("ActDisconnectionDelayTime", QVariant(value)); }

inline int ActProgType::ActDsidPropertyBit() const
{
    QVariant qax_result = property("ActDsidPropertyBit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActDsidPropertyBit(int value){ setProperty("ActDsidPropertyBit", QVariant(value)); }

inline QString ActProgType::ActHostAddress() const
{
    QVariant qax_result = property("ActHostAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ActProgType::SetActHostAddress(const QString& value){ setProperty("ActHostAddress", QVariant(value)); }

inline int ActProgType::ActIONumber() const
{
    QVariant qax_result = property("ActIONumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActIONumber(int value){ setProperty("ActIONumber", QVariant(value)); }

inline int ActProgType::ActIntelligentPreferenceBit() const
{
    QVariant qax_result = property("ActIntelligentPreferenceBit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActIntelligentPreferenceBit(int value){ setProperty("ActIntelligentPreferenceBit", QVariant(value)); }

inline int ActProgType::ActLineType() const
{
    QVariant qax_result = property("ActLineType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActLineType(int value){ setProperty("ActLineType", QVariant(value)); }

inline int ActProgType::ActMultiDropChannelNumber() const
{
    QVariant qax_result = property("ActMultiDropChannelNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActMultiDropChannelNumber(int value){ setProperty("ActMultiDropChannelNumber", QVariant(value)); }

inline int ActProgType::ActNetworkNumber() const
{
    QVariant qax_result = property("ActNetworkNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActNetworkNumber(int value){ setProperty("ActNetworkNumber", QVariant(value)); }

inline QString ActProgType::ActOutsideLineNumber() const
{
    QVariant qax_result = property("ActOutsideLineNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ActProgType::SetActOutsideLineNumber(const QString& value){ setProperty("ActOutsideLineNumber", QVariant(value)); }

inline int ActProgType::ActPacketType() const
{
    QVariant qax_result = property("ActPacketType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActPacketType(int value){ setProperty("ActPacketType", QVariant(value)); }

inline int ActProgType::ActParity() const
{
    QVariant qax_result = property("ActParity");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActParity(int value){ setProperty("ActParity", QVariant(value)); }

inline QString ActProgType::ActPassword() const
{
    QVariant qax_result = property("ActPassword");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ActProgType::SetActPassword(const QString& value){ setProperty("ActPassword", QVariant(value)); }

inline int ActProgType::ActPasswordCancelResponseWaitTime() const
{
    QVariant qax_result = property("ActPasswordCancelResponseWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActPasswordCancelResponseWaitTime(int value){ setProperty("ActPasswordCancelResponseWaitTime", QVariant(value)); }

inline int ActProgType::ActPortNumber() const
{
    QVariant qax_result = property("ActPortNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActPortNumber(int value){ setProperty("ActPortNumber", QVariant(value)); }

inline int ActProgType::ActProtocolType() const
{
    QVariant qax_result = property("ActProtocolType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActProtocolType(int value){ setProperty("ActProtocolType", QVariant(value)); }

inline int ActProgType::ActSourceNetworkNumber() const
{
    QVariant qax_result = property("ActSourceNetworkNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActSourceNetworkNumber(int value){ setProperty("ActSourceNetworkNumber", QVariant(value)); }

inline int ActProgType::ActSourceStationNumber() const
{
    QVariant qax_result = property("ActSourceStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActSourceStationNumber(int value){ setProperty("ActSourceStationNumber", QVariant(value)); }

inline int ActProgType::ActStationNumber() const
{
    QVariant qax_result = property("ActStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActStationNumber(int value){ setProperty("ActStationNumber", QVariant(value)); }

inline int ActProgType::ActStopBits() const
{
    QVariant qax_result = property("ActStopBits");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActStopBits(int value){ setProperty("ActStopBits", QVariant(value)); }

inline int ActProgType::ActSumCheck() const
{
    QVariant qax_result = property("ActSumCheck");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActSumCheck(int value){ setProperty("ActSumCheck", QVariant(value)); }

inline int ActProgType::ActTargetSimulator() const
{
    QVariant qax_result = property("ActTargetSimulator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActTargetSimulator(int value){ setProperty("ActTargetSimulator", QVariant(value)); }

inline int ActProgType::ActThroughNetworkType() const
{
    QVariant qax_result = property("ActThroughNetworkType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActThroughNetworkType(int value){ setProperty("ActThroughNetworkType", QVariant(value)); }

inline int ActProgType::ActTimeOut() const
{
    QVariant qax_result = property("ActTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActTimeOut(int value){ setProperty("ActTimeOut", QVariant(value)); }

inline int ActProgType::ActTransmissionDelayTime() const
{
    QVariant qax_result = property("ActTransmissionDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActTransmissionDelayTime(int value){ setProperty("ActTransmissionDelayTime", QVariant(value)); }

inline int ActProgType::ActUnitNumber() const
{
    QVariant qax_result = property("ActUnitNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActUnitNumber(int value){ setProperty("ActUnitNumber", QVariant(value)); }

inline int ActProgType::ActUnitType() const
{
    QVariant qax_result = property("ActUnitType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActProgType::SetActUnitType(int value){ setProperty("ActUnitType", QVariant(value)); }

inline int ActProgType::CheckDeviceString(const QString& szDevice, int lCheckType, int lSize, int& lplDeviceType, QString& lpszDeviceName, int& lplDeviceNumber, int& lplDeviceRadix)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lCheckType, (void*)&lSize, (void*)&lplDeviceType, (void*)&lpszDeviceName, (void*)&lplDeviceNumber, (void*)&lplDeviceRadix};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int ActProgType::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int ActProgType::Connect()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int ActProgType::Disconnect()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int ActProgType::EntryDeviceStatus(const QString& szDeviceList, int lSize, int lMonitorCycle, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lMonitorCycle, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int ActProgType::FreeDeviceStatus()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int ActProgType::GetClockData(int& lpsYear, int& lpsMonth, int& lpsDay, int& lpsDayOfWeek, int& lpsHour, int& lpsMinute, int& lpsSecond)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpsYear, (void*)&lpsMonth, (void*)&lpsDay, (void*)&lpsDayOfWeek, (void*)&lpsHour, (void*)&lpsMinute, (void*)&lpsSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int ActProgType::GetCpuListOnEther(int lTimeOut, int lCpuListSize, int& lplCpuList, int& lplCpuListCount)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lTimeOut, (void*)&lCpuListSize, (void*)&lplCpuList, (void*)&lplCpuListCount};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int ActProgType::GetCpuType(QString& szCpuName, int& lplCpuCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szCpuName, (void*)&lplCpuCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline int ActProgType::GetDevice(const QString& szDevice, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline int ActProgType::GetDevice2(const QString& szDevice, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline int ActProgType::Open()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int ActProgType::ReadBuffer(int lStartIO, int lAddress, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lStartIO, (void*)&lAddress, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline int ActProgType::ReadDeviceBlock(const QString& szDevice, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int ActProgType::ReadDeviceBlock2(const QString& szDevice, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int ActProgType::ReadDeviceRandom(const QString& szDeviceList, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline int ActProgType::ReadDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline int ActProgType::SetClockData(int sYear, int sMonth, int sDay, int sDayOfWeek, int sHour, int sMinute, int sSecond)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sYear, (void*)&sMonth, (void*)&sDay, (void*)&sDayOfWeek, (void*)&sHour, (void*)&sMinute, (void*)&sSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 100, _a);
    return qax_result;
}

inline int ActProgType::SetCpuStatus(int lOperation)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lOperation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 101, _a);
    return qax_result;
}

inline int ActProgType::SetDevice(const QString& szDevice, int lData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 102, _a);
    return qax_result;
}

inline int ActProgType::SetDevice2(const QString& szDevice, int sData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&sData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 103, _a);
    return qax_result;
}

inline int ActProgType::WriteBuffer(int lStartIO, int lAddress, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lStartIO, (void*)&lAddress, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 104, _a);
    return qax_result;
}

inline int ActProgType::WriteDeviceBlock(const QString& szDevice, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 105, _a);
    return qax_result;
}

inline int ActProgType::WriteDeviceBlock2(const QString& szDevice, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 106, _a);
    return qax_result;
}

inline int ActProgType::WriteDeviceRandom(const QString& szDeviceList, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 107, _a);
    return qax_result;
}

inline int ActProgType::WriteDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 108, _a);
    return qax_result;
}


inline QString IActProgType::ActATCommand() const
{
    QVariant qax_result = property("ActATCommand");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IActProgType::SetActATCommand(const QString& value){ setProperty("ActATCommand", QVariant(value)); }

inline int IActProgType::ActATCommandPasswordCancelRetryTimes() const
{
    QVariant qax_result = property("ActATCommandPasswordCancelRetryTimes");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActATCommandPasswordCancelRetryTimes(int value){ setProperty("ActATCommandPasswordCancelRetryTimes", QVariant(value)); }

inline int IActProgType::ActATCommandResponseWaitTime() const
{
    QVariant qax_result = property("ActATCommandResponseWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActATCommandResponseWaitTime(int value){ setProperty("ActATCommandResponseWaitTime", QVariant(value)); }

inline int IActProgType::ActBaudRate() const
{
    QVariant qax_result = property("ActBaudRate");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActBaudRate(int value){ setProperty("ActBaudRate", QVariant(value)); }

inline int IActProgType::ActCallbackCancelWaitTime() const
{
    QVariant qax_result = property("ActCallbackCancelWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActCallbackCancelWaitTime(int value){ setProperty("ActCallbackCancelWaitTime", QVariant(value)); }

inline int IActProgType::ActCallbackDelayTime() const
{
    QVariant qax_result = property("ActCallbackDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActCallbackDelayTime(int value){ setProperty("ActCallbackDelayTime", QVariant(value)); }

inline QString IActProgType::ActCallbackNumber() const
{
    QVariant qax_result = property("ActCallbackNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IActProgType::SetActCallbackNumber(const QString& value){ setProperty("ActCallbackNumber", QVariant(value)); }

inline int IActProgType::ActCallbackReceptionWaitingTimeOut() const
{
    QVariant qax_result = property("ActCallbackReceptionWaitingTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActCallbackReceptionWaitingTimeOut(int value){ setProperty("ActCallbackReceptionWaitingTimeOut", QVariant(value)); }

inline int IActProgType::ActConnectUnitNumber() const
{
    QVariant qax_result = property("ActConnectUnitNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActConnectUnitNumber(int value){ setProperty("ActConnectUnitNumber", QVariant(value)); }

inline int IActProgType::ActConnectWay() const
{
    QVariant qax_result = property("ActConnectWay");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActConnectWay(int value){ setProperty("ActConnectWay", QVariant(value)); }

inline int IActProgType::ActConnectionCDWaitTime() const
{
    QVariant qax_result = property("ActConnectionCDWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActConnectionCDWaitTime(int value){ setProperty("ActConnectionCDWaitTime", QVariant(value)); }

inline int IActProgType::ActConnectionModemReportWaitTime() const
{
    QVariant qax_result = property("ActConnectionModemReportWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActConnectionModemReportWaitTime(int value){ setProperty("ActConnectionModemReportWaitTime", QVariant(value)); }

inline int IActProgType::ActControl() const
{
    QVariant qax_result = property("ActControl");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActControl(int value){ setProperty("ActControl", QVariant(value)); }

inline int IActProgType::ActCpuTimeOut() const
{
    QVariant qax_result = property("ActCpuTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActCpuTimeOut(int value){ setProperty("ActCpuTimeOut", QVariant(value)); }

inline int IActProgType::ActCpuType() const
{
    QVariant qax_result = property("ActCpuType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActCpuType(int value){ setProperty("ActCpuType", QVariant(value)); }

inline int IActProgType::ActDataBits() const
{
    QVariant qax_result = property("ActDataBits");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActDataBits(int value){ setProperty("ActDataBits", QVariant(value)); }

inline int IActProgType::ActDestinationIONumber() const
{
    QVariant qax_result = property("ActDestinationIONumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActDestinationIONumber(int value){ setProperty("ActDestinationIONumber", QVariant(value)); }

inline int IActProgType::ActDestinationPortNumber() const
{
    QVariant qax_result = property("ActDestinationPortNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActDestinationPortNumber(int value){ setProperty("ActDestinationPortNumber", QVariant(value)); }

inline QString IActProgType::ActDialNumber() const
{
    QVariant qax_result = property("ActDialNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IActProgType::SetActDialNumber(const QString& value){ setProperty("ActDialNumber", QVariant(value)); }

inline int IActProgType::ActDidPropertyBit() const
{
    QVariant qax_result = property("ActDidPropertyBit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActDidPropertyBit(int value){ setProperty("ActDidPropertyBit", QVariant(value)); }

inline int IActProgType::ActDisconnectionCDWaitTime() const
{
    QVariant qax_result = property("ActDisconnectionCDWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActDisconnectionCDWaitTime(int value){ setProperty("ActDisconnectionCDWaitTime", QVariant(value)); }

inline int IActProgType::ActDisconnectionDelayTime() const
{
    QVariant qax_result = property("ActDisconnectionDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActDisconnectionDelayTime(int value){ setProperty("ActDisconnectionDelayTime", QVariant(value)); }

inline int IActProgType::ActDsidPropertyBit() const
{
    QVariant qax_result = property("ActDsidPropertyBit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActDsidPropertyBit(int value){ setProperty("ActDsidPropertyBit", QVariant(value)); }

inline QString IActProgType::ActHostAddress() const
{
    QVariant qax_result = property("ActHostAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IActProgType::SetActHostAddress(const QString& value){ setProperty("ActHostAddress", QVariant(value)); }

inline int IActProgType::ActIONumber() const
{
    QVariant qax_result = property("ActIONumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActIONumber(int value){ setProperty("ActIONumber", QVariant(value)); }

inline int IActProgType::ActIntelligentPreferenceBit() const
{
    QVariant qax_result = property("ActIntelligentPreferenceBit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActIntelligentPreferenceBit(int value){ setProperty("ActIntelligentPreferenceBit", QVariant(value)); }

inline int IActProgType::ActLineType() const
{
    QVariant qax_result = property("ActLineType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActLineType(int value){ setProperty("ActLineType", QVariant(value)); }

inline int IActProgType::ActMultiDropChannelNumber() const
{
    QVariant qax_result = property("ActMultiDropChannelNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActMultiDropChannelNumber(int value){ setProperty("ActMultiDropChannelNumber", QVariant(value)); }

inline int IActProgType::ActNetworkNumber() const
{
    QVariant qax_result = property("ActNetworkNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActNetworkNumber(int value){ setProperty("ActNetworkNumber", QVariant(value)); }

inline QString IActProgType::ActOutsideLineNumber() const
{
    QVariant qax_result = property("ActOutsideLineNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IActProgType::SetActOutsideLineNumber(const QString& value){ setProperty("ActOutsideLineNumber", QVariant(value)); }

inline int IActProgType::ActPacketType() const
{
    QVariant qax_result = property("ActPacketType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActPacketType(int value){ setProperty("ActPacketType", QVariant(value)); }

inline int IActProgType::ActParity() const
{
    QVariant qax_result = property("ActParity");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActParity(int value){ setProperty("ActParity", QVariant(value)); }

inline QString IActProgType::ActPassword() const
{
    QVariant qax_result = property("ActPassword");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IActProgType::SetActPassword(const QString& value){ setProperty("ActPassword", QVariant(value)); }

inline int IActProgType::ActPasswordCancelResponseWaitTime() const
{
    QVariant qax_result = property("ActPasswordCancelResponseWaitTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActPasswordCancelResponseWaitTime(int value){ setProperty("ActPasswordCancelResponseWaitTime", QVariant(value)); }

inline int IActProgType::ActPortNumber() const
{
    QVariant qax_result = property("ActPortNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActPortNumber(int value){ setProperty("ActPortNumber", QVariant(value)); }

inline int IActProgType::ActProtocolType() const
{
    QVariant qax_result = property("ActProtocolType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActProtocolType(int value){ setProperty("ActProtocolType", QVariant(value)); }

inline int IActProgType::ActSourceNetworkNumber() const
{
    QVariant qax_result = property("ActSourceNetworkNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActSourceNetworkNumber(int value){ setProperty("ActSourceNetworkNumber", QVariant(value)); }

inline int IActProgType::ActSourceStationNumber() const
{
    QVariant qax_result = property("ActSourceStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActSourceStationNumber(int value){ setProperty("ActSourceStationNumber", QVariant(value)); }

inline int IActProgType::ActStationNumber() const
{
    QVariant qax_result = property("ActStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActStationNumber(int value){ setProperty("ActStationNumber", QVariant(value)); }

inline int IActProgType::ActStopBits() const
{
    QVariant qax_result = property("ActStopBits");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActStopBits(int value){ setProperty("ActStopBits", QVariant(value)); }

inline int IActProgType::ActSumCheck() const
{
    QVariant qax_result = property("ActSumCheck");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActSumCheck(int value){ setProperty("ActSumCheck", QVariant(value)); }

inline int IActProgType::ActTargetSimulator() const
{
    QVariant qax_result = property("ActTargetSimulator");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActTargetSimulator(int value){ setProperty("ActTargetSimulator", QVariant(value)); }

inline int IActProgType::ActThroughNetworkType() const
{
    QVariant qax_result = property("ActThroughNetworkType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActThroughNetworkType(int value){ setProperty("ActThroughNetworkType", QVariant(value)); }

inline int IActProgType::ActTimeOut() const
{
    QVariant qax_result = property("ActTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActTimeOut(int value){ setProperty("ActTimeOut", QVariant(value)); }

inline int IActProgType::ActTransmissionDelayTime() const
{
    QVariant qax_result = property("ActTransmissionDelayTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActTransmissionDelayTime(int value){ setProperty("ActTransmissionDelayTime", QVariant(value)); }

inline int IActProgType::ActUnitNumber() const
{
    QVariant qax_result = property("ActUnitNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActUnitNumber(int value){ setProperty("ActUnitNumber", QVariant(value)); }

inline int IActProgType::ActUnitType() const
{
    QVariant qax_result = property("ActUnitType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActProgType::SetActUnitType(int value){ setProperty("ActUnitType", QVariant(value)); }

inline int IActProgType::CheckDeviceString(const QString& szDevice, int lCheckType, int lSize, int& lplDeviceType, QString& lpszDeviceName, int& lplDeviceNumber, int& lplDeviceRadix)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lCheckType, (void*)&lSize, (void*)&lplDeviceType, (void*)&lpszDeviceName, (void*)&lplDeviceNumber, (void*)&lplDeviceRadix};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IActProgType::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IActProgType::Connect()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IActProgType::Disconnect()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IActProgType::EntryDeviceStatus(const QString& szDeviceList, int lSize, int lMonitorCycle, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lMonitorCycle, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IActProgType::FreeDeviceStatus()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IActProgType::GetClockData(int& lpsYear, int& lpsMonth, int& lpsDay, int& lpsDayOfWeek, int& lpsHour, int& lpsMinute, int& lpsSecond)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpsYear, (void*)&lpsMonth, (void*)&lpsDay, (void*)&lpsDayOfWeek, (void*)&lpsHour, (void*)&lpsMinute, (void*)&lpsSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IActProgType::GetCpuListOnEther(int lTimeOut, int lCpuListSize, int& lplCpuList, int& lplCpuListCount)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lTimeOut, (void*)&lCpuListSize, (void*)&lplCpuList, (void*)&lplCpuListCount};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IActProgType::GetCpuType(QString& szCpuName, int& lplCpuCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szCpuName, (void*)&lplCpuCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IActProgType::GetDevice(const QString& szDevice, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IActProgType::GetDevice2(const QString& szDevice, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IActProgType::Open()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IActProgType::ReadBuffer(int lStartIO, int lAddress, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lStartIO, (void*)&lAddress, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IActProgType::ReadDeviceBlock(const QString& szDevice, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IActProgType::ReadDeviceBlock2(const QString& szDevice, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IActProgType::ReadDeviceRandom(const QString& szDeviceList, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IActProgType::ReadDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int IActProgType::SetClockData(int sYear, int sMonth, int sDay, int sDayOfWeek, int sHour, int sMinute, int sSecond)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sYear, (void*)&sMonth, (void*)&sDay, (void*)&sDayOfWeek, (void*)&sHour, (void*)&sMinute, (void*)&sSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}

inline int IActProgType::SetCpuStatus(int lOperation)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lOperation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
    return qax_result;
}

inline int IActProgType::SetDevice(const QString& szDevice, int lData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline int IActProgType::SetDevice2(const QString& szDevice, int sData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&sData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline int IActProgType::WriteBuffer(int lStartIO, int lAddress, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lStartIO, (void*)&lAddress, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline int IActProgType::WriteDeviceBlock(const QString& szDevice, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
    return qax_result;
}

inline int IActProgType::WriteDeviceBlock2(const QString& szDevice, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
    return qax_result;
}

inline int IActProgType::WriteDeviceRandom(const QString& szDeviceList, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline int IActProgType::WriteDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
    return qax_result;
}


inline QVariant ActMLProgType::ActBaudRate() const
{
    QVariant qax_result = property("ActBaudRate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActBaudRate(const QVariant& value){ setProperty("ActBaudRate", QVariant(value)); }

inline QVariant ActMLProgType::ActConnectUnitNumber() const
{
    QVariant qax_result = property("ActConnectUnitNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActConnectUnitNumber(const QVariant& value){ setProperty("ActConnectUnitNumber", QVariant(value)); }

inline QVariant ActMLProgType::ActControl() const
{
    QVariant qax_result = property("ActControl");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActControl(const QVariant& value){ setProperty("ActControl", QVariant(value)); }

inline QVariant ActMLProgType::ActCpuTimeOut() const
{
    QVariant qax_result = property("ActCpuTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActCpuTimeOut(const QVariant& value){ setProperty("ActCpuTimeOut", QVariant(value)); }

inline QVariant ActMLProgType::ActCpuType() const
{
    QVariant qax_result = property("ActCpuType");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActCpuType(const QVariant& value){ setProperty("ActCpuType", QVariant(value)); }

inline QVariant ActMLProgType::ActDataBits() const
{
    QVariant qax_result = property("ActDataBits");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActDataBits(const QVariant& value){ setProperty("ActDataBits", QVariant(value)); }

inline QVariant ActMLProgType::ActDestinationIONumber() const
{
    QVariant qax_result = property("ActDestinationIONumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActDestinationIONumber(const QVariant& value){ setProperty("ActDestinationIONumber", QVariant(value)); }

inline QVariant ActMLProgType::ActDestinationPortNumber() const
{
    QVariant qax_result = property("ActDestinationPortNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActDestinationPortNumber(const QVariant& value){ setProperty("ActDestinationPortNumber", QVariant(value)); }

inline QVariant ActMLProgType::ActDidPropertyBit() const
{
    QVariant qax_result = property("ActDidPropertyBit");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActDidPropertyBit(const QVariant& value){ setProperty("ActDidPropertyBit", QVariant(value)); }

inline QVariant ActMLProgType::ActDsidPropertyBit() const
{
    QVariant qax_result = property("ActDsidPropertyBit");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActDsidPropertyBit(const QVariant& value){ setProperty("ActDsidPropertyBit", QVariant(value)); }

inline QVariant ActMLProgType::ActHostAddress() const
{
    QVariant qax_result = property("ActHostAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActHostAddress(const QVariant& value){ setProperty("ActHostAddress", QVariant(value)); }

inline QVariant ActMLProgType::ActIONumber() const
{
    QVariant qax_result = property("ActIONumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActIONumber(const QVariant& value){ setProperty("ActIONumber", QVariant(value)); }

inline QVariant ActMLProgType::ActIntelligentPreferenceBit() const
{
    QVariant qax_result = property("ActIntelligentPreferenceBit");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActIntelligentPreferenceBit(const QVariant& value){ setProperty("ActIntelligentPreferenceBit", QVariant(value)); }

inline QVariant ActMLProgType::ActMultiDropChannelNumber() const
{
    QVariant qax_result = property("ActMultiDropChannelNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActMultiDropChannelNumber(const QVariant& value){ setProperty("ActMultiDropChannelNumber", QVariant(value)); }

inline QVariant ActMLProgType::ActNetworkNumber() const
{
    QVariant qax_result = property("ActNetworkNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActNetworkNumber(const QVariant& value){ setProperty("ActNetworkNumber", QVariant(value)); }

inline QVariant ActMLProgType::ActPacketType() const
{
    QVariant qax_result = property("ActPacketType");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActPacketType(const QVariant& value){ setProperty("ActPacketType", QVariant(value)); }

inline QVariant ActMLProgType::ActParity() const
{
    QVariant qax_result = property("ActParity");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActParity(const QVariant& value){ setProperty("ActParity", QVariant(value)); }

inline QVariant ActMLProgType::ActPassword() const
{
    QVariant qax_result = property("ActPassword");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActPassword(const QVariant& value){ setProperty("ActPassword", QVariant(value)); }

inline QVariant ActMLProgType::ActPortNumber() const
{
    QVariant qax_result = property("ActPortNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActPortNumber(const QVariant& value){ setProperty("ActPortNumber", QVariant(value)); }

inline QVariant ActMLProgType::ActProtocolType() const
{
    QVariant qax_result = property("ActProtocolType");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActProtocolType(const QVariant& value){ setProperty("ActProtocolType", QVariant(value)); }

inline QVariant ActMLProgType::ActSourceNetworkNumber() const
{
    QVariant qax_result = property("ActSourceNetworkNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActSourceNetworkNumber(const QVariant& value){ setProperty("ActSourceNetworkNumber", QVariant(value)); }

inline QVariant ActMLProgType::ActSourceStationNumber() const
{
    QVariant qax_result = property("ActSourceStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActSourceStationNumber(const QVariant& value){ setProperty("ActSourceStationNumber", QVariant(value)); }

inline QVariant ActMLProgType::ActStationNumber() const
{
    QVariant qax_result = property("ActStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActStationNumber(const QVariant& value){ setProperty("ActStationNumber", QVariant(value)); }

inline QVariant ActMLProgType::ActStopBits() const
{
    QVariant qax_result = property("ActStopBits");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActStopBits(const QVariant& value){ setProperty("ActStopBits", QVariant(value)); }

inline QVariant ActMLProgType::ActSumCheck() const
{
    QVariant qax_result = property("ActSumCheck");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActSumCheck(const QVariant& value){ setProperty("ActSumCheck", QVariant(value)); }

inline QVariant ActMLProgType::ActTargetSimulator() const
{
    QVariant qax_result = property("ActTargetSimulator");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActTargetSimulator(const QVariant& value){ setProperty("ActTargetSimulator", QVariant(value)); }

inline QVariant ActMLProgType::ActThroughNetworkType() const
{
    QVariant qax_result = property("ActThroughNetworkType");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActThroughNetworkType(const QVariant& value){ setProperty("ActThroughNetworkType", QVariant(value)); }

inline QVariant ActMLProgType::ActTimeOut() const
{
    QVariant qax_result = property("ActTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActTimeOut(const QVariant& value){ setProperty("ActTimeOut", QVariant(value)); }

inline QVariant ActMLProgType::ActUnitNumber() const
{
    QVariant qax_result = property("ActUnitNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActUnitNumber(const QVariant& value){ setProperty("ActUnitNumber", QVariant(value)); }

inline QVariant ActMLProgType::ActUnitType() const
{
    QVariant qax_result = property("ActUnitType");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLProgType::SetActUnitType(const QVariant& value){ setProperty("ActUnitType", QVariant(value)); }

inline QVariant ActMLProgType::Close()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline QVariant ActMLProgType::EntryDeviceStatus(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varMonitorCycle, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varMonitorCycle, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline QVariant ActMLProgType::FreeDeviceStatus()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline QVariant ActMLProgType::GetClockData(QVariant& lpvarYear, QVariant& lpvarMonth, QVariant& lpvarDay, QVariant& lpvarDayOfWeek, QVariant& lpvarHour, QVariant& lpvarMinute, QVariant& lpvarSecond)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpvarYear, (void*)&lpvarMonth, (void*)&lpvarDay, (void*)&lpvarDayOfWeek, (void*)&lpvarHour, (void*)&lpvarMinute, (void*)&lpvarSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline QVariant ActMLProgType::GetCpuType(QVariant& lpvarCpuName, QVariant& lpvarCpuCode)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpvarCpuName, (void*)&lpvarCpuCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline QVariant ActMLProgType::GetDevice(const QVariant& varDevice, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline QVariant ActMLProgType::GetDevice2(const QVariant& varDevice, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline QVariant ActMLProgType::Open()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline QVariant ActMLProgType::ReadBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varReadSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varStartIO, (void*)&varAddress, (void*)&varReadSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline QVariant ActMLProgType::ReadDeviceBlock(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline QVariant ActMLProgType::ReadDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline QVariant ActMLProgType::ReadDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline QVariant ActMLProgType::ReadDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline QVariant ActMLProgType::SetClockData(const QVariant& varYear, const QVariant& varMonth, const QVariant& varDay, const QVariant& varDayOfWeek, const QVariant& varHour, const QVariant& varMinute, const QVariant& varSecond)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varYear, (void*)&varMonth, (void*)&varDay, (void*)&varDayOfWeek, (void*)&varHour, (void*)&varMinute, (void*)&varSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline QVariant ActMLProgType::SetCpuStatus(const QVariant& varOperation)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varOperation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
    return qax_result;
}

inline QVariant ActMLProgType::SetDevice(const QVariant& varDevice, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
    return qax_result;
}

inline QVariant ActMLProgType::SetDevice2(const QVariant& varDevice, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
    return qax_result;
}

inline QVariant ActMLProgType::WriteBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varWriteSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varStartIO, (void*)&varAddress, (void*)&varWriteSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
    return qax_result;
}

inline QVariant ActMLProgType::WriteDeviceBlock(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 84, _a);
    return qax_result;
}

inline QVariant ActMLProgType::WriteDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 85, _a);
    return qax_result;
}

inline QVariant ActMLProgType::WriteDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
    return qax_result;
}

inline QVariant ActMLProgType::WriteDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 87, _a);
    return qax_result;
}


inline QVariant IActMLProgType::ActBaudRate() const
{
    QVariant qax_result = property("ActBaudRate");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActBaudRate(const QVariant& value){ setProperty("ActBaudRate", QVariant(value)); }

inline QVariant IActMLProgType::ActConnectUnitNumber() const
{
    QVariant qax_result = property("ActConnectUnitNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActConnectUnitNumber(const QVariant& value){ setProperty("ActConnectUnitNumber", QVariant(value)); }

inline QVariant IActMLProgType::ActControl() const
{
    QVariant qax_result = property("ActControl");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActControl(const QVariant& value){ setProperty("ActControl", QVariant(value)); }

inline QVariant IActMLProgType::ActCpuTimeOut() const
{
    QVariant qax_result = property("ActCpuTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActCpuTimeOut(const QVariant& value){ setProperty("ActCpuTimeOut", QVariant(value)); }

inline QVariant IActMLProgType::ActCpuType() const
{
    QVariant qax_result = property("ActCpuType");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActCpuType(const QVariant& value){ setProperty("ActCpuType", QVariant(value)); }

inline QVariant IActMLProgType::ActDataBits() const
{
    QVariant qax_result = property("ActDataBits");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActDataBits(const QVariant& value){ setProperty("ActDataBits", QVariant(value)); }

inline QVariant IActMLProgType::ActDestinationIONumber() const
{
    QVariant qax_result = property("ActDestinationIONumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActDestinationIONumber(const QVariant& value){ setProperty("ActDestinationIONumber", QVariant(value)); }

inline QVariant IActMLProgType::ActDestinationPortNumber() const
{
    QVariant qax_result = property("ActDestinationPortNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActDestinationPortNumber(const QVariant& value){ setProperty("ActDestinationPortNumber", QVariant(value)); }

inline QVariant IActMLProgType::ActDidPropertyBit() const
{
    QVariant qax_result = property("ActDidPropertyBit");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActDidPropertyBit(const QVariant& value){ setProperty("ActDidPropertyBit", QVariant(value)); }

inline QVariant IActMLProgType::ActDsidPropertyBit() const
{
    QVariant qax_result = property("ActDsidPropertyBit");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActDsidPropertyBit(const QVariant& value){ setProperty("ActDsidPropertyBit", QVariant(value)); }

inline QVariant IActMLProgType::ActHostAddress() const
{
    QVariant qax_result = property("ActHostAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActHostAddress(const QVariant& value){ setProperty("ActHostAddress", QVariant(value)); }

inline QVariant IActMLProgType::ActIONumber() const
{
    QVariant qax_result = property("ActIONumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActIONumber(const QVariant& value){ setProperty("ActIONumber", QVariant(value)); }

inline QVariant IActMLProgType::ActIntelligentPreferenceBit() const
{
    QVariant qax_result = property("ActIntelligentPreferenceBit");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActIntelligentPreferenceBit(const QVariant& value){ setProperty("ActIntelligentPreferenceBit", QVariant(value)); }

inline QVariant IActMLProgType::ActMultiDropChannelNumber() const
{
    QVariant qax_result = property("ActMultiDropChannelNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActMultiDropChannelNumber(const QVariant& value){ setProperty("ActMultiDropChannelNumber", QVariant(value)); }

inline QVariant IActMLProgType::ActNetworkNumber() const
{
    QVariant qax_result = property("ActNetworkNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActNetworkNumber(const QVariant& value){ setProperty("ActNetworkNumber", QVariant(value)); }

inline QVariant IActMLProgType::ActPacketType() const
{
    QVariant qax_result = property("ActPacketType");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActPacketType(const QVariant& value){ setProperty("ActPacketType", QVariant(value)); }

inline QVariant IActMLProgType::ActParity() const
{
    QVariant qax_result = property("ActParity");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActParity(const QVariant& value){ setProperty("ActParity", QVariant(value)); }

inline QVariant IActMLProgType::ActPassword() const
{
    QVariant qax_result = property("ActPassword");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActPassword(const QVariant& value){ setProperty("ActPassword", QVariant(value)); }

inline QVariant IActMLProgType::ActPortNumber() const
{
    QVariant qax_result = property("ActPortNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActPortNumber(const QVariant& value){ setProperty("ActPortNumber", QVariant(value)); }

inline QVariant IActMLProgType::ActProtocolType() const
{
    QVariant qax_result = property("ActProtocolType");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActProtocolType(const QVariant& value){ setProperty("ActProtocolType", QVariant(value)); }

inline QVariant IActMLProgType::ActSourceNetworkNumber() const
{
    QVariant qax_result = property("ActSourceNetworkNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActSourceNetworkNumber(const QVariant& value){ setProperty("ActSourceNetworkNumber", QVariant(value)); }

inline QVariant IActMLProgType::ActSourceStationNumber() const
{
    QVariant qax_result = property("ActSourceStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActSourceStationNumber(const QVariant& value){ setProperty("ActSourceStationNumber", QVariant(value)); }

inline QVariant IActMLProgType::ActStationNumber() const
{
    QVariant qax_result = property("ActStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActStationNumber(const QVariant& value){ setProperty("ActStationNumber", QVariant(value)); }

inline QVariant IActMLProgType::ActStopBits() const
{
    QVariant qax_result = property("ActStopBits");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActStopBits(const QVariant& value){ setProperty("ActStopBits", QVariant(value)); }

inline QVariant IActMLProgType::ActSumCheck() const
{
    QVariant qax_result = property("ActSumCheck");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActSumCheck(const QVariant& value){ setProperty("ActSumCheck", QVariant(value)); }

inline QVariant IActMLProgType::ActTargetSimulator() const
{
    QVariant qax_result = property("ActTargetSimulator");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActTargetSimulator(const QVariant& value){ setProperty("ActTargetSimulator", QVariant(value)); }

inline QVariant IActMLProgType::ActThroughNetworkType() const
{
    QVariant qax_result = property("ActThroughNetworkType");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActThroughNetworkType(const QVariant& value){ setProperty("ActThroughNetworkType", QVariant(value)); }

inline QVariant IActMLProgType::ActTimeOut() const
{
    QVariant qax_result = property("ActTimeOut");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActTimeOut(const QVariant& value){ setProperty("ActTimeOut", QVariant(value)); }

inline QVariant IActMLProgType::ActUnitNumber() const
{
    QVariant qax_result = property("ActUnitNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActUnitNumber(const QVariant& value){ setProperty("ActUnitNumber", QVariant(value)); }

inline QVariant IActMLProgType::ActUnitType() const
{
    QVariant qax_result = property("ActUnitType");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLProgType::SetActUnitType(const QVariant& value){ setProperty("ActUnitType", QVariant(value)); }

inline QVariant IActMLProgType::Close()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QVariant IActMLProgType::EntryDeviceStatus(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varMonitorCycle, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varMonitorCycle, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QVariant IActMLProgType::FreeDeviceStatus()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QVariant IActMLProgType::GetClockData(QVariant& lpvarYear, QVariant& lpvarMonth, QVariant& lpvarDay, QVariant& lpvarDayOfWeek, QVariant& lpvarHour, QVariant& lpvarMinute, QVariant& lpvarSecond)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpvarYear, (void*)&lpvarMonth, (void*)&lpvarDay, (void*)&lpvarDayOfWeek, (void*)&lpvarHour, (void*)&lpvarMinute, (void*)&lpvarSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QVariant IActMLProgType::GetCpuType(QVariant& lpvarCpuName, QVariant& lpvarCpuCode)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpvarCpuName, (void*)&lpvarCpuCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline QVariant IActMLProgType::GetDevice(const QVariant& varDevice, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QVariant IActMLProgType::GetDevice2(const QVariant& varDevice, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QVariant IActMLProgType::Open()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QVariant IActMLProgType::ReadBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varReadSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varStartIO, (void*)&varAddress, (void*)&varReadSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline QVariant IActMLProgType::ReadDeviceBlock(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QVariant IActMLProgType::ReadDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline QVariant IActMLProgType::ReadDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline QVariant IActMLProgType::ReadDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline QVariant IActMLProgType::SetClockData(const QVariant& varYear, const QVariant& varMonth, const QVariant& varDay, const QVariant& varDayOfWeek, const QVariant& varHour, const QVariant& varMinute, const QVariant& varSecond)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varYear, (void*)&varMonth, (void*)&varDay, (void*)&varDayOfWeek, (void*)&varHour, (void*)&varMinute, (void*)&varSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline QVariant IActMLProgType::SetCpuStatus(const QVariant& varOperation)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varOperation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline QVariant IActMLProgType::SetDevice(const QVariant& varDevice, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline QVariant IActMLProgType::SetDevice2(const QVariant& varDevice, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline QVariant IActMLProgType::WriteBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varWriteSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varStartIO, (void*)&varAddress, (void*)&varWriteSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline QVariant IActMLProgType::WriteDeviceBlock(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline QVariant IActMLProgType::WriteDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline QVariant IActMLProgType::WriteDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline QVariant IActMLProgType::WriteDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}



#endif

}

QT_BEGIN_NAMESPACE

namespace QtMetaTypePrivate {
template<>
struct QMetaTypeFunctionHelper<ActProgTypeLib::ActProgType, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<ActProgTypeLib::ActProgType*>(t)->ActProgTypeLib::ActProgType::~ActProgType();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) ActProgTypeLib::ActProgType;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const ActProgTypeLib::ActProgType*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<ActProgTypeLib::ActProgType*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<ActProgTypeLib::IActProgType, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<ActProgTypeLib::IActProgType*>(t)->ActProgTypeLib::IActProgType::~IActProgType();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) ActProgTypeLib::IActProgType;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const ActProgTypeLib::IActProgType*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<ActProgTypeLib::IActProgType*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<ActProgTypeLib::ActMLProgType, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<ActProgTypeLib::ActMLProgType*>(t)->ActProgTypeLib::ActMLProgType::~ActMLProgType();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) ActProgTypeLib::ActMLProgType;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const ActProgTypeLib::ActMLProgType*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<ActProgTypeLib::ActMLProgType*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<ActProgTypeLib::IActMLProgType, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<ActProgTypeLib::IActMLProgType*>(t)->ActProgTypeLib::IActMLProgType::~IActMLProgType();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) ActProgTypeLib::IActMLProgType;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const ActProgTypeLib::IActMLProgType*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<ActProgTypeLib::IActMLProgType*>(t); }
#endif // QT_NO_DATASTREAM
};

} // namespace QtMetaTypePrivate
QT_END_NAMESPACE

#endif

