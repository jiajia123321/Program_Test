/****************************************************************************
**
** Namespace ActUtlTypeLib generated by dumpcpp v5.13.0 using
** dumpcpp {63885648-1785-41A4-82D5-C578D29E4DA8}
** from the type library C:\MELSEC\Act\Control\ActUtlType.dll
**
****************************************************************************/

#ifndef QAX_DUMPCPP_ACTUTLTYPELIB_H
#define QAX_DUMPCPP_ACTUTLTYPELIB_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef ACTUTLTYPELIB_EXPORT
#define ACTUTLTYPELIB_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace ActUtlTypeLib {


// skipping event interface _IActUtlTypeEvents

class ACTUTLTYPELIB_EXPORT IActUtlType : public QAxObject
{
public:
    IActUtlType(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property ActLogicalStationNumber

    Property ActLogicalStationNumber

    */
    inline int ActLogicalStationNumber() const; //Returns the value of ActLogicalStationNumber
    inline void SetActLogicalStationNumber(int value); //Sets the value of the ActLogicalStationNumber property

    /*
    Property ActPassword

    Property ActPassword

    */
    inline QString ActPassword() const; //Returns the value of ActPassword
    inline void SetActPassword(const QString& value); //Sets the value of the ActPassword property

    /*
    Method CheckDeviceString

    Method CheckDeviceString

    */
    inline int CheckDeviceString(const QString& szDevice, int lCheckType, int lSize, int& lplDeviceType, QString& lpszDeviceName, int& lplDeviceNumber, int& lplDeviceRadix);

    /*
    Method Close

    Method Close

    */
    inline int Close();

    /*
    Method Connect

    Method ConnectTel

    */
    inline int Connect();

    /*
    Method Disconnect

    Method DisconnectTel

    */
    inline int Disconnect();

    /*
    Method EntryDeviceStatus

    Method EntryDeviceStatus

    */
    inline int EntryDeviceStatus(const QString& szDeviceList, int lSize, int lMonitorCycle, int& lplData);

    /*
    Method FreeDeviceStatus

    Method FreeDeviceStatus

    */
    inline int FreeDeviceStatus();

    /*
    Method GetClockData

    Method GetClockData

    */
    inline int GetClockData(int& lpsYear, int& lpsMonth, int& lpsDay, int& lpsDayOfWeek, int& lpsHour, int& lpsMinute, int& lpsSecond);

    /*
    Method GetCpuType

    Method GetCpuType

    */
    inline int GetCpuType(QString& szCpuName, int& lplCpuCode);

    /*
    Method GetDevice

    Method GetDevice

    */
    inline int GetDevice(const QString& szDevice, int& lplData);

    /*
    Method GetDevice2

    Method GetDevice2

    */
    inline int GetDevice2(const QString& szDevice, int& lpsData);

    /*
    Method Open

    Method Open

    */
    inline int Open();

    /*
    Method ReadBuffer

    Method ReadBuffer

    */
    inline int ReadBuffer(int lStartIO, int lAddress, int lSize, int& lpsData);

    /*
    Method ReadDeviceBlock

    Method ReadDeviceBlock

    */
    inline int ReadDeviceBlock(const QString& szDevice, int lSize, int& lplData);

    /*
    Method ReadDeviceBlock2

    Method ReadDeviceBlock2

    */
    inline int ReadDeviceBlock2(const QString& szDevice, int lSize, int& lpsData);

    /*
    Method ReadDeviceRandom

    Method ReadDeviceRandom

    */
    inline int ReadDeviceRandom(const QString& szDeviceList, int lSize, int& lplData);

    /*
    Method ReadDeviceRandom2

    Method ReadDeviceRandom2

    */
    inline int ReadDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData);

    /*
    Method SetClockData

    Method SetClockData

    */
    inline int SetClockData(int sYear, int sMonth, int sDay, int sDayOfWeek, int sHour, int sMinute, int sSecond);

    /*
    Method SetCpuStatus

    Method SetCpuStatus

    */
    inline int SetCpuStatus(int lOperation);

    /*
    Method SetDevice

    Method SetDevice

    */
    inline int SetDevice(const QString& szDevice, int lData);

    /*
    Method SetDevice2

    Method SetDevice2

    */
    inline int SetDevice2(const QString& szDevice, int sData);

    /*
    Method WriteBuffer

    Method WriteBuffer

    */
    inline int WriteBuffer(int lStartIO, int lAddress, int lSize, int& lpsData);

    /*
    Method WriteDeviceBlock

    Method WriteDeviceBlock

    */
    inline int WriteDeviceBlock(const QString& szDevice, int lSize, int& lplData);

    /*
    Method WriteDeviceBlock2

    Method WriteDeviceBlock2

    */
    inline int WriteDeviceBlock2(const QString& szDevice, int lSize, int& lpsData);

    /*
    Method WriteDeviceRandom

    Method WriteDeviceRandom

    */
    inline int WriteDeviceRandom(const QString& szDeviceList, int lSize, int& lplData);

    /*
    Method WriteDeviceRandom2

    Method WriteDeviceRandom2

    */
    inline int WriteDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface _IActMLUtlTypeEvents

class ACTUTLTYPELIB_EXPORT IActMLUtlType : public QAxObject
{
public:
    IActMLUtlType(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property ActLogicalStationNumber

    Property ActLogicalStationNumber

    */
    inline QVariant ActLogicalStationNumber() const; //Returns the value of ActLogicalStationNumber
    inline void SetActLogicalStationNumber(const QVariant& value); //Sets the value of the ActLogicalStationNumber property

    /*
    Property ActPassword

    Property ActPassword

    */
    inline QVariant ActPassword() const; //Returns the value of ActPassword
    inline void SetActPassword(const QVariant& value); //Sets the value of the ActPassword property

    /*
    Method Close

    Method Close

    */
    inline QVariant Close();

    /*
    Method EntryDeviceStatus

    Method EntryDeviceStatus

    */
    inline QVariant EntryDeviceStatus(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varMonitorCycle, const QVariant& varData);

    /*
    Method FreeDeviceStatus

    Method FreeDeviceStatus

    */
    inline QVariant FreeDeviceStatus();

    /*
    Method GetClockData

    Method GetClockData

    */
    inline QVariant GetClockData(QVariant& lpvarYear, QVariant& lpvarMonth, QVariant& lpvarDay, QVariant& lpvarDayOfWeek, QVariant& lpvarHour, QVariant& lpvarMinute, QVariant& lpvarSecond);

    /*
    Method GetCpuType

    Method GetCpuType

    */
    inline QVariant GetCpuType(QVariant& lpvarCpuName, QVariant& lpvarCpuCode);

    /*
    Method GetDevice

    Method GetDevice

    */
    inline QVariant GetDevice(const QVariant& varDevice, QVariant& lpvarData);

    /*
    Method GetDevice2

    Method GetDevice2

    */
    inline QVariant GetDevice2(const QVariant& varDevice, QVariant& lpvarData);

    /*
    Method Open

    Method Open

    */
    inline QVariant Open();

    /*
    Method ReadBuffer

    Method ReadBuffer

    */
    inline QVariant ReadBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varReadSize, QVariant& lpvarData);

    /*
    Method ReadDeviceBlock

    Method ReadDeviceBlock

    */
    inline QVariant ReadDeviceBlock(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceBlock2

    Method ReadDeviceBlock2

    */
    inline QVariant ReadDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceRandom

    Method ReadDeviceRandom

    */
    inline QVariant ReadDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceRandom2

    Method ReadDeviceRandom2

    */
    inline QVariant ReadDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method SetClockData

    Method SetClockData

    */
    inline QVariant SetClockData(const QVariant& varYear, const QVariant& varMonth, const QVariant& varDay, const QVariant& varDayOfWeek, const QVariant& varHour, const QVariant& varMinute, const QVariant& varSecond);

    /*
    Method SetCpuStatus

    Method SetCpuStatus

    */
    inline QVariant SetCpuStatus(const QVariant& varOperation);

    /*
    Method SetDevice

    Method SetDevice

    */
    inline QVariant SetDevice(const QVariant& varDevice, const QVariant& varData);

    /*
    Method SetDevice2

    Method SetDevice2

    */
    inline QVariant SetDevice2(const QVariant& varDevice, const QVariant& varData);

    /*
    Method WriteBuffer

    Method WriteBuffer

    */
    inline QVariant WriteBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varWriteSize, const QVariant& varData);

    /*
    Method WriteDeviceBlock

    Method WriteDeviceBlock

    */
    inline QVariant WriteDeviceBlock(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceBlock2

    Method WriteDeviceBlock2

    */
    inline QVariant WriteDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceRandom

    Method WriteDeviceRandom

    */
    inline QVariant WriteDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceRandom2

    Method WriteDeviceRandom2

    */
    inline QVariant WriteDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class ACTUTLTYPELIB_EXPORT ActUtlType : public QAxWidget
{
public:
    ActUtlType(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl(QStringLiteral("{63885648-1785-41a4-82d5-c578d29e4da8}"));
    }

    ActUtlType(IActUtlType *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActLogicalStationNumber

    Property ActLogicalStationNumber

    */
    inline int ActLogicalStationNumber() const; //Returns the value of ActLogicalStationNumber
    inline void SetActLogicalStationNumber(int value); //Sets the value of the ActLogicalStationNumber property

    /*
    Property ActPassword

    Property ActPassword

    */
    inline QString ActPassword() const; //Returns the value of ActPassword
    inline void SetActPassword(const QString& value); //Sets the value of the ActPassword property

    /*
    Method CheckDeviceString

    Method CheckDeviceString

    */
    inline int CheckDeviceString(const QString& szDevice, int lCheckType, int lSize, int& lplDeviceType, QString& lpszDeviceName, int& lplDeviceNumber, int& lplDeviceRadix);

    /*
    Method Close

    Method Close

    */
    inline int Close();

    /*
    Method Connect

    Method ConnectTel

    */
    inline int Connect();

    /*
    Method Disconnect

    Method DisconnectTel

    */
    inline int Disconnect();

    /*
    Method EntryDeviceStatus

    Method EntryDeviceStatus

    */
    inline int EntryDeviceStatus(const QString& szDeviceList, int lSize, int lMonitorCycle, int& lplData);

    /*
    Method FreeDeviceStatus

    Method FreeDeviceStatus

    */
    inline int FreeDeviceStatus();

    /*
    Method GetClockData

    Method GetClockData

    */
    inline int GetClockData(int& lpsYear, int& lpsMonth, int& lpsDay, int& lpsDayOfWeek, int& lpsHour, int& lpsMinute, int& lpsSecond);

    /*
    Method GetCpuType

    Method GetCpuType

    */
    inline int GetCpuType(QString& szCpuName, int& lplCpuCode);

    /*
    Method GetDevice

    Method GetDevice

    */
    inline int GetDevice(const QString& szDevice, int& lplData);

    /*
    Method GetDevice2

    Method GetDevice2

    */
    inline int GetDevice2(const QString& szDevice, int& lpsData);

    /*
    Method Open

    Method Open

    */
    inline int Open();

    /*
    Method ReadBuffer

    Method ReadBuffer

    */
    inline int ReadBuffer(int lStartIO, int lAddress, int lSize, int& lpsData);

    /*
    Method ReadDeviceBlock

    Method ReadDeviceBlock

    */
    inline int ReadDeviceBlock(const QString& szDevice, int lSize, int& lplData);

    /*
    Method ReadDeviceBlock2

    Method ReadDeviceBlock2

    */
    inline int ReadDeviceBlock2(const QString& szDevice, int lSize, int& lpsData);

    /*
    Method ReadDeviceRandom

    Method ReadDeviceRandom

    */
    inline int ReadDeviceRandom(const QString& szDeviceList, int lSize, int& lplData);

    /*
    Method ReadDeviceRandom2

    Method ReadDeviceRandom2

    */
    inline int ReadDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData);

    /*
    Method SetClockData

    Method SetClockData

    */
    inline int SetClockData(int sYear, int sMonth, int sDay, int sDayOfWeek, int sHour, int sMinute, int sSecond);

    /*
    Method SetCpuStatus

    Method SetCpuStatus

    */
    inline int SetCpuStatus(int lOperation);

    /*
    Method SetDevice

    Method SetDevice

    */
    inline int SetDevice(const QString& szDevice, int lData);

    /*
    Method SetDevice2

    Method SetDevice2

    */
    inline int SetDevice2(const QString& szDevice, int sData);

    /*
    Method WriteBuffer

    Method WriteBuffer

    */
    inline int WriteBuffer(int lStartIO, int lAddress, int lSize, int& lpsData);

    /*
    Method WriteDeviceBlock

    Method WriteDeviceBlock

    */
    inline int WriteDeviceBlock(const QString& szDevice, int lSize, int& lplData);

    /*
    Method WriteDeviceBlock2

    Method WriteDeviceBlock2

    */
    inline int WriteDeviceBlock2(const QString& szDevice, int lSize, int& lpsData);

    /*
    Method WriteDeviceRandom

    Method WriteDeviceRandom

    */
    inline int WriteDeviceRandom(const QString& szDeviceList, int lSize, int& lplData);

    /*
    Method WriteDeviceRandom2

    Method WriteDeviceRandom2

    */
    inline int WriteDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class ACTUTLTYPELIB_EXPORT ActMLUtlType : public QAxWidget
{
public:
    ActMLUtlType(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl(QStringLiteral("{29de4b06-c429-420a-b3b7-bf7dc62649b2}"));
    }

    ActMLUtlType(IActMLUtlType *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActLogicalStationNumber

    Property ActLogicalStationNumber

    */
    inline QVariant ActLogicalStationNumber() const; //Returns the value of ActLogicalStationNumber
    inline void SetActLogicalStationNumber(const QVariant& value); //Sets the value of the ActLogicalStationNumber property

    /*
    Property ActPassword

    Property ActPassword

    */
    inline QVariant ActPassword() const; //Returns the value of ActPassword
    inline void SetActPassword(const QVariant& value); //Sets the value of the ActPassword property

    /*
    Method Close

    Method Close

    */
    inline QVariant Close();

    /*
    Method EntryDeviceStatus

    Method EntryDeviceStatus

    */
    inline QVariant EntryDeviceStatus(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varMonitorCycle, const QVariant& varData);

    /*
    Method FreeDeviceStatus

    Method FreeDeviceStatus

    */
    inline QVariant FreeDeviceStatus();

    /*
    Method GetClockData

    Method GetClockData

    */
    inline QVariant GetClockData(QVariant& lpvarYear, QVariant& lpvarMonth, QVariant& lpvarDay, QVariant& lpvarDayOfWeek, QVariant& lpvarHour, QVariant& lpvarMinute, QVariant& lpvarSecond);

    /*
    Method GetCpuType

    Method GetCpuType

    */
    inline QVariant GetCpuType(QVariant& lpvarCpuName, QVariant& lpvarCpuCode);

    /*
    Method GetDevice

    Method GetDevice

    */
    inline QVariant GetDevice(const QVariant& varDevice, QVariant& lpvarData);

    /*
    Method GetDevice2

    Method GetDevice2

    */
    inline QVariant GetDevice2(const QVariant& varDevice, QVariant& lpvarData);

    /*
    Method Open

    Method Open

    */
    inline QVariant Open();

    /*
    Method ReadBuffer

    Method ReadBuffer

    */
    inline QVariant ReadBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varReadSize, QVariant& lpvarData);

    /*
    Method ReadDeviceBlock

    Method ReadDeviceBlock

    */
    inline QVariant ReadDeviceBlock(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceBlock2

    Method ReadDeviceBlock2

    */
    inline QVariant ReadDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceRandom

    Method ReadDeviceRandom

    */
    inline QVariant ReadDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method ReadDeviceRandom2

    Method ReadDeviceRandom2

    */
    inline QVariant ReadDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData);

    /*
    Method SetClockData

    Method SetClockData

    */
    inline QVariant SetClockData(const QVariant& varYear, const QVariant& varMonth, const QVariant& varDay, const QVariant& varDayOfWeek, const QVariant& varHour, const QVariant& varMinute, const QVariant& varSecond);

    /*
    Method SetCpuStatus

    Method SetCpuStatus

    */
    inline QVariant SetCpuStatus(const QVariant& varOperation);

    /*
    Method SetDevice

    Method SetDevice

    */
    inline QVariant SetDevice(const QVariant& varDevice, const QVariant& varData);

    /*
    Method SetDevice2

    Method SetDevice2

    */
    inline QVariant SetDevice2(const QVariant& varDevice, const QVariant& varData);

    /*
    Method WriteBuffer

    Method WriteBuffer

    */
    inline QVariant WriteBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varWriteSize, const QVariant& varData);

    /*
    Method WriteDeviceBlock

    Method WriteDeviceBlock

    */
    inline QVariant WriteDeviceBlock(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceBlock2

    Method WriteDeviceBlock2

    */
    inline QVariant WriteDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceRandom

    Method WriteDeviceRandom

    */
    inline QVariant WriteDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData);

    /*
    Method WriteDeviceRandom2

    Method WriteDeviceRandom2

    */
    inline QVariant WriteDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_ACTUTLTYPELIB_NOINLINES
inline int ActUtlType::ActLogicalStationNumber() const
{
    QVariant qax_result = property("ActLogicalStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ActUtlType::SetActLogicalStationNumber(int value){ setProperty("ActLogicalStationNumber", QVariant(value)); }

inline QString ActUtlType::ActPassword() const
{
    QVariant qax_result = property("ActPassword");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ActUtlType::SetActPassword(const QString& value){ setProperty("ActPassword", QVariant(value)); }

inline int ActUtlType::CheckDeviceString(const QString& szDevice, int lCheckType, int lSize, int& lplDeviceType, QString& lpszDeviceName, int& lplDeviceNumber, int& lplDeviceRadix)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lCheckType, (void*)&lSize, (void*)&lplDeviceType, (void*)&lpszDeviceName, (void*)&lplDeviceNumber, (void*)&lplDeviceRadix};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int ActUtlType::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int ActUtlType::Connect()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int ActUtlType::Disconnect()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int ActUtlType::EntryDeviceStatus(const QString& szDeviceList, int lSize, int lMonitorCycle, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lMonitorCycle, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int ActUtlType::FreeDeviceStatus()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int ActUtlType::GetClockData(int& lpsYear, int& lpsMonth, int& lpsDay, int& lpsDayOfWeek, int& lpsHour, int& lpsMinute, int& lpsSecond)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpsYear, (void*)&lpsMonth, (void*)&lpsDay, (void*)&lpsDayOfWeek, (void*)&lpsHour, (void*)&lpsMinute, (void*)&lpsSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int ActUtlType::GetCpuType(QString& szCpuName, int& lplCpuCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szCpuName, (void*)&lplCpuCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int ActUtlType::GetDevice(const QString& szDevice, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline int ActUtlType::GetDevice2(const QString& szDevice, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline int ActUtlType::Open()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline int ActUtlType::ReadBuffer(int lStartIO, int lAddress, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lStartIO, (void*)&lAddress, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int ActUtlType::ReadDeviceBlock(const QString& szDevice, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline int ActUtlType::ReadDeviceBlock2(const QString& szDevice, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int ActUtlType::ReadDeviceRandom(const QString& szDeviceList, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int ActUtlType::ReadDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline int ActUtlType::SetClockData(int sYear, int sMonth, int sDay, int sDayOfWeek, int sHour, int sMinute, int sSecond)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sYear, (void*)&sMonth, (void*)&sDay, (void*)&sDayOfWeek, (void*)&sHour, (void*)&sMinute, (void*)&sSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline int ActUtlType::SetCpuStatus(int lOperation)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lOperation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline int ActUtlType::SetDevice(const QString& szDevice, int lData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline int ActUtlType::SetDevice2(const QString& szDevice, int sData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&sData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline int ActUtlType::WriteBuffer(int lStartIO, int lAddress, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lStartIO, (void*)&lAddress, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline int ActUtlType::WriteDeviceBlock(const QString& szDevice, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline int ActUtlType::WriteDeviceBlock2(const QString& szDevice, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline int ActUtlType::WriteDeviceRandom(const QString& szDeviceList, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline int ActUtlType::WriteDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}


inline int IActUtlType::ActLogicalStationNumber() const
{
    QVariant qax_result = property("ActLogicalStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IActUtlType::SetActLogicalStationNumber(int value){ setProperty("ActLogicalStationNumber", QVariant(value)); }

inline QString IActUtlType::ActPassword() const
{
    QVariant qax_result = property("ActPassword");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IActUtlType::SetActPassword(const QString& value){ setProperty("ActPassword", QVariant(value)); }

inline int IActUtlType::CheckDeviceString(const QString& szDevice, int lCheckType, int lSize, int& lplDeviceType, QString& lpszDeviceName, int& lplDeviceNumber, int& lplDeviceRadix)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lCheckType, (void*)&lSize, (void*)&lplDeviceType, (void*)&lpszDeviceName, (void*)&lplDeviceNumber, (void*)&lplDeviceRadix};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IActUtlType::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int IActUtlType::Connect()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int IActUtlType::Disconnect()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int IActUtlType::EntryDeviceStatus(const QString& szDeviceList, int lSize, int lMonitorCycle, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lMonitorCycle, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IActUtlType::FreeDeviceStatus()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IActUtlType::GetClockData(int& lpsYear, int& lpsMonth, int& lpsDay, int& lpsDayOfWeek, int& lpsHour, int& lpsMinute, int& lpsSecond)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpsYear, (void*)&lpsMonth, (void*)&lpsDay, (void*)&lpsDayOfWeek, (void*)&lpsHour, (void*)&lpsMinute, (void*)&lpsSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int IActUtlType::GetCpuType(QString& szCpuName, int& lplCpuCode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szCpuName, (void*)&lplCpuCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int IActUtlType::GetDevice(const QString& szDevice, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int IActUtlType::GetDevice2(const QString& szDevice, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IActUtlType::Open()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IActUtlType::ReadBuffer(int lStartIO, int lAddress, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lStartIO, (void*)&lAddress, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IActUtlType::ReadDeviceBlock(const QString& szDevice, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int IActUtlType::ReadDeviceBlock2(const QString& szDevice, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int IActUtlType::ReadDeviceRandom(const QString& szDeviceList, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int IActUtlType::ReadDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int IActUtlType::SetClockData(int sYear, int sMonth, int sDay, int sDayOfWeek, int sHour, int sMinute, int sSecond)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sYear, (void*)&sMonth, (void*)&sDay, (void*)&sDayOfWeek, (void*)&sHour, (void*)&sMinute, (void*)&sSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int IActUtlType::SetCpuStatus(int lOperation)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lOperation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int IActUtlType::SetDevice(const QString& szDevice, int lData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int IActUtlType::SetDevice2(const QString& szDevice, int sData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&sData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int IActUtlType::WriteBuffer(int lStartIO, int lAddress, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lStartIO, (void*)&lAddress, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline int IActUtlType::WriteDeviceBlock(const QString& szDevice, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int IActUtlType::WriteDeviceBlock2(const QString& szDevice, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDevice, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline int IActUtlType::WriteDeviceRandom(const QString& szDeviceList, int lSize, int& lplData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lplData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline int IActUtlType::WriteDeviceRandom2(const QString& szDeviceList, int lSize, int& lpsData)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&szDeviceList, (void*)&lSize, (void*)&lpsData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}


inline QVariant ActMLUtlType::ActLogicalStationNumber() const
{
    QVariant qax_result = property("ActLogicalStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLUtlType::SetActLogicalStationNumber(const QVariant& value){ setProperty("ActLogicalStationNumber", QVariant(value)); }

inline QVariant ActMLUtlType::ActPassword() const
{
    QVariant qax_result = property("ActPassword");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ActMLUtlType::SetActPassword(const QVariant& value){ setProperty("ActPassword", QVariant(value)); }

inline QVariant ActMLUtlType::Close()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::EntryDeviceStatus(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varMonitorCycle, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varMonitorCycle, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::FreeDeviceStatus()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::GetClockData(QVariant& lpvarYear, QVariant& lpvarMonth, QVariant& lpvarDay, QVariant& lpvarDayOfWeek, QVariant& lpvarHour, QVariant& lpvarMinute, QVariant& lpvarSecond)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpvarYear, (void*)&lpvarMonth, (void*)&lpvarDay, (void*)&lpvarDayOfWeek, (void*)&lpvarHour, (void*)&lpvarMinute, (void*)&lpvarSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::GetCpuType(QVariant& lpvarCpuName, QVariant& lpvarCpuCode)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpvarCpuName, (void*)&lpvarCpuCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::GetDevice(const QVariant& varDevice, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::GetDevice2(const QVariant& varDevice, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::Open()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::ReadBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varReadSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varStartIO, (void*)&varAddress, (void*)&varReadSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::ReadDeviceBlock(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::ReadDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::ReadDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::ReadDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::SetClockData(const QVariant& varYear, const QVariant& varMonth, const QVariant& varDay, const QVariant& varDayOfWeek, const QVariant& varHour, const QVariant& varMinute, const QVariant& varSecond)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varYear, (void*)&varMonth, (void*)&varDay, (void*)&varDayOfWeek, (void*)&varHour, (void*)&varMinute, (void*)&varSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::SetCpuStatus(const QVariant& varOperation)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varOperation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::SetDevice(const QVariant& varDevice, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::SetDevice2(const QVariant& varDevice, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::WriteBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varWriteSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varStartIO, (void*)&varAddress, (void*)&varWriteSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::WriteDeviceBlock(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::WriteDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::WriteDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline QVariant ActMLUtlType::WriteDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}


inline QVariant IActMLUtlType::ActLogicalStationNumber() const
{
    QVariant qax_result = property("ActLogicalStationNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLUtlType::SetActLogicalStationNumber(const QVariant& value){ setProperty("ActLogicalStationNumber", QVariant(value)); }

inline QVariant IActMLUtlType::ActPassword() const
{
    QVariant qax_result = property("ActPassword");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IActMLUtlType::SetActPassword(const QVariant& value){ setProperty("ActPassword", QVariant(value)); }

inline QVariant IActMLUtlType::Close()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::EntryDeviceStatus(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varMonitorCycle, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varMonitorCycle, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::FreeDeviceStatus()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::GetClockData(QVariant& lpvarYear, QVariant& lpvarMonth, QVariant& lpvarDay, QVariant& lpvarDayOfWeek, QVariant& lpvarHour, QVariant& lpvarMinute, QVariant& lpvarSecond)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpvarYear, (void*)&lpvarMonth, (void*)&lpvarDay, (void*)&lpvarDayOfWeek, (void*)&lpvarHour, (void*)&lpvarMinute, (void*)&lpvarSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::GetCpuType(QVariant& lpvarCpuName, QVariant& lpvarCpuCode)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lpvarCpuName, (void*)&lpvarCpuCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::GetDevice(const QVariant& varDevice, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::GetDevice2(const QVariant& varDevice, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::Open()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::ReadBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varReadSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varStartIO, (void*)&varAddress, (void*)&varReadSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::ReadDeviceBlock(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::ReadDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::ReadDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::ReadDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, QVariant& lpvarData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&lpvarData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::SetClockData(const QVariant& varYear, const QVariant& varMonth, const QVariant& varDay, const QVariant& varDayOfWeek, const QVariant& varHour, const QVariant& varMinute, const QVariant& varSecond)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varYear, (void*)&varMonth, (void*)&varDay, (void*)&varDayOfWeek, (void*)&varHour, (void*)&varMinute, (void*)&varSecond};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::SetCpuStatus(const QVariant& varOperation)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varOperation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::SetDevice(const QVariant& varDevice, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::SetDevice2(const QVariant& varDevice, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::WriteBuffer(const QVariant& varStartIO, const QVariant& varAddress, const QVariant& varWriteSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varStartIO, (void*)&varAddress, (void*)&varWriteSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::WriteDeviceBlock(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::WriteDeviceBlock2(const QVariant& varDevice, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDevice, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::WriteDeviceRandom(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline QVariant IActMLUtlType::WriteDeviceRandom2(const QVariant& varDeviceList, const QVariant& varSize, const QVariant& varData)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&varDeviceList, (void*)&varSize, (void*)&varData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}



#endif

}

QT_BEGIN_NAMESPACE

namespace QtMetaTypePrivate {
template<>
struct QMetaTypeFunctionHelper<ActUtlTypeLib::ActUtlType, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<ActUtlTypeLib::ActUtlType*>(t)->ActUtlTypeLib::ActUtlType::~ActUtlType();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) ActUtlTypeLib::ActUtlType;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const ActUtlTypeLib::ActUtlType*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<ActUtlTypeLib::ActUtlType*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<ActUtlTypeLib::IActUtlType, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<ActUtlTypeLib::IActUtlType*>(t)->ActUtlTypeLib::IActUtlType::~IActUtlType();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) ActUtlTypeLib::IActUtlType;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const ActUtlTypeLib::IActUtlType*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<ActUtlTypeLib::IActUtlType*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<ActUtlTypeLib::ActMLUtlType, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<ActUtlTypeLib::ActMLUtlType*>(t)->ActUtlTypeLib::ActMLUtlType::~ActMLUtlType();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) ActUtlTypeLib::ActMLUtlType;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const ActUtlTypeLib::ActMLUtlType*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<ActUtlTypeLib::ActMLUtlType*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<ActUtlTypeLib::IActMLUtlType, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<ActUtlTypeLib::IActMLUtlType*>(t)->ActUtlTypeLib::IActMLUtlType::~IActMLUtlType();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) ActUtlTypeLib::IActMLUtlType;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const ActUtlTypeLib::IActMLUtlType*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<ActUtlTypeLib::IActMLUtlType*>(t); }
#endif // QT_NO_DATASTREAM
};

} // namespace QtMetaTypePrivate
QT_END_NAMESPACE

#endif

